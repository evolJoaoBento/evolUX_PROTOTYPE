@using Shared.Models.Areas.evolDP
@using Shared.ViewModels.Areas.evolDP
@using Newtonsoft.Json;
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer localizer
@inject IConfiguration configuration

@model ExceptionLevelViewModel;
@{
    string siteURL = configuration.GetValue<string>("evolUXSiteURL");
    string eLevelDesc = string.Format("ExceptionLevel{0}ID", Model.Level);
    string ExceptionLevelIDLabel = TempData["ExceptionLevelID"]?.ToString();
    if (string.IsNullOrEmpty(ExceptionLevelIDLabel))
        ExceptionLevelIDLabel = localizer[eLevelDesc].Value;
}
<script>
    const deleteMsgException = '@localizer["deleteMsgException"] @ExceptionLevelIDLabel?';
</script>
@if (Model == null || Model.ExceptionslevelList == null || Model.ExceptionslevelList.Count() == 0)
{
    <tr><td colspan="5" class="text-center">@localizer["NoModelData"]</td></tr>
}
else
{
     <div id="TitlePage">
        <h1>@ExceptionLevelIDLabel</h1>
    </div>
    string value;

    string errorMessage = TempData["Message"]?.ToString();
    TempData["Message"] = "";

    <table class="table table-sm table-hover table-collapse-seperate">
        <thead id="bootstrap-overrides" class="table-info sticky-header">
           <tr>
                <th style="text-align: center"><img onclick="EditRow('')" style="background:none; width:35px;height:35px;" src="@siteURL/images/add.png" title="@localizer["AddException"] @ExceptionLevelIDLabel" /></th>
                <th>@localizer["ExceptionID"]</th>
                <th>@localizer["ExceptionCode"]</th>
                <th>@localizer["ExceptionDescription"]</th>
            </tr>
        </thead>
        <tbody id="bootstrap-overrides">
            <tr id="Hide|" style="display: none">
                    <form id="AddExceptionFrm|" class="d-flex justify-content-center m-5" asp-area="evolDP" asp-controller="DocCode" asp-action="ConfigExceptionLevel" asp-route-source="Add" asp-route-Level="@Model.Level">
                        <td>
                           <input onclick="return true" type="image" value="@localizer["SubmitChange"]" style="background:none; width:25px;height:25px;" name="Submit" src="@siteURL/images/Ok.png"/>
                           <img onclick="CancelRow('')" type="image"style="background:none; width:25px;height:25px;" src="@siteURL/images/cancel.png" title="@localizer["Cancel"]"/>
                        </td>
                        <td></td>
                        <td><input id=ExceptionCode name=ExceptionCode type="text" maxlength="4" style="width: 100%" /></td>
                        <td><input id=ExceptionDescription name=ExceptionDescription type="text" maxlength="256" style="width: 100%" /></td>
                    </form>
            </tr>
            @foreach(ExceptionLevel e in Model.ExceptionslevelList)
            {
                value = Model.Level.ToString() + "|" + e.ExceptionLevelID.ToString();
                <tr id="Exception|@value">
                    <td>
                        <img onclick="EditRow('@value')" style="background:none; width:25px;height:25px;" src="@siteURL/images/edit.png" title="@localizer["ChangeException"] @ExceptionLevelIDLabel @localizer["Code"] = @e.ExceptionCode" />
                        <a asp-area="evolDP" asp-controller="DocCode" asp-action="DeleteExceptionLevel" asp-route-level="@Model.Level"  asp-route-exceptionID="@e.ExceptionLevelID">
                            <img onclick="return confirmExceptionDelete()" style="background:none; width:25px;height:25px;" src="@siteURL/images/delete.png" title="@localizer["DeleteException"] @ExceptionLevelIDLabel @localizer["Code"] = @e.ExceptionCode" />
                        </a>
                    </td>
                    <td>@e.ExceptionLevelID</td>
                    <td>@e.ExceptionCode</td>
                    <td>@e.ExceptionDescription</td>
                </tr>
                <tr id="Hide|@value" style="display: none">
                    <form id="AddExceptionFrm|@value" class="d-flex justify-content-center m-5" asp-area="evolDP" asp-controller="DocCode" asp-action="ConfigExceptionLevel" asp-route-source="Edit" asp-route-Level="@Model.Level">
                    <td>
                        <input onclick="return true" type="image" value="@localizer["SubmitChange"]" style="background:none; width:25px;height:25px;" name="Submit" src="@siteURL/images/Ok.png" />
                        <img onclick="CancelRow('@value')" type="image" style="background:none; width:25px;height:25px;" src="@siteURL/images/cancel.png" title="@localizer["Cancel"]" />
                    </td>
                    <td>@e.ExceptionLevelID</td>
                    <input style="display: none" id=ExceptionLevelID name=ExceptionLevelID value="@e.ExceptionLevelID" />
                    <td><input id=ExceptionCode name=ExceptionCode type="text" maxlength="4" style="width: 100%" value="@e.ExceptionCode" /></td>
                    <td><input id=ExceptionDescription name=ExceptionDescription type="text" maxlength="256" style="width: 100%" value="@e.ExceptionDescription" /></td>
                </form>
                </tr>
            }
        </tbody>
    </table>
}
@section Scripts
{
    <script type="text/javascript">
      function confirmExceptionDelete() {
            if (confirm(deleteMsgException)) {
          // User clicked "OK", handle the deletion
          return true;
        } else {
          // User clicked "Cancel", do nothing
          return false;
        }
      }
        function CancelRow(value) {
            eShide('Hide|' + value);
            eSshow('Exception|' + value);
            var obj = document.getElementById("AddExceptionFrm|" + value);
            obj.disabled = true;
            return false;
        }
        function EditRow(value) {
            eShide('Exception|' + value);
            eSshow('Hide|' + value);
            var obj = document.getElementById("AddExceptionFrm|" + value);
            obj.disabled = false;

            let str = 'Hide|' + value;
            trElements = document.querySelectorAll('tr[id^="Hide|"]');
            trElements.forEach(tElement => {
                if (tElement.id != str) {
                    let val = tElement.id.substring(5);
                    CancelRow(val);
                }
            });
        }
    </script>
}