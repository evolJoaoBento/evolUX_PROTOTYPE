@using Shared.Models.Areas.evolDP
@using Shared.ViewModels.Areas.evolDP
@using Newtonsoft.Json;
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer localizer
@inject IConfiguration configuration

@model ExceptionLevelViewModel;
@{
    int colWidth;
    string siteURL = configuration.GetValue<string>("evolUXSiteURL");
    bool AddExceptionLevel = false;
    bool DeleteExceptionLevel = false;

    if (Model.Permissions.Find(x => x == "AddExceptionLevel") != null) { AddExceptionLevel = true; }
    if (Model.Permissions.Find(x => x == "DeleteExceptionLevel") != null) { DeleteExceptionLevel = true; }

    string eLevelDesc = string.Format("ExceptionLevel{0}ID", Model.Level);
    string ExceptionLevelIDLabel = TempData["ExceptionLevelID"]?.ToString();
    if (string.IsNullOrEmpty(ExceptionLevelIDLabel))
        ExceptionLevelIDLabel = localizer[eLevelDesc].Value;
}
<script>
    const deleteMsgException = '@localizer["deleteMsgException"] @ExceptionLevelIDLabel?';
</script>
@if (Model == null || Model.ExceptionslevelList == null || Model.ExceptionslevelList.Count() == 0)
{
    <tr><td colspan="5" class="text-center">@localizer["NoModelData"]</td></tr>
}
else
{
    <div class="popup-container" id="confirmPopupEdit" style="display: none;">
        <div class="bgGradient">
            <div class="popup">
                <form class="align-content-center FormEdit" asp-area="evolDP" asp-controller="DocCode" asp-action="ConfigExceptionLevel" asp-route-source="" asp-route-Level="@Model.Level">
                    <h1 id="popupMessage"></h1>
                    <div class="form-inputs">
                        <input style="display: none" id=ExceptionLevelID name=ExceptionLevelID value="" />
                        <h6>@localizer["ExceptionID"]</h6>
                        <input id=ExceptionID type="text" maxlength="4" style="width: 100%" value="" readonly />
                        <h6>@localizer["ExceptionCode"]</h6>
                        <input id=ExceptionCode name=ExceptionCode type="text" maxlength="4" style="width: 100%" value="" />
                        <h6>@localizer["ExceptionDescription"]</h6>
                        <input id=ExceptionDescription name=ExceptionDescription type="text" maxlength="256" style="width: 100%" value="" />
                    </div>
                    <div class="popup-buttons">
                        <button class="popup-button" id="confirmEdit" name="Submit" onclick="return confirmBtn()" value="@localizer["SubmitChange"]">Confirmar</button>
                        <button class="popup-button" onclick="return closePopup()">Cancelar</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
     <div id="TitlePage">
        <h1>@ExceptionLevelIDLabel</h1>
    </div>
    <a class='bx bx-left-arrow grow_01' style="color:rgb(90 205 239)" asp-area="evolDP" asp-controller="DocCode" asp-action="ExceptionLevels">
    </a>

    string value;

    string errorMessage = TempData["Message"]?.ToString();
    TempData["Message"] = "";
    colWidth = 0;
    if (AddExceptionLevel)
    {
        colWidth++;
        if (DeleteExceptionLevel)
            colWidth++;
        colWidth = 30 * colWidth;
    }
    <table class="table table-sm table-hover table-collapse-seperate table-shadow">
        <thead id="bootstrap-overrides" class="table-info sticky-header">
            <tr>
                @if (AddExceptionLevel)
                {
                    <th class="evol-fitcontent-column borders" style="text-align:center"><img onclick="openPopupAdd()" class="evol-image grow" style="width:30px;height:30px;" src="~/images/add.png" title="@localizer["AddException"] @ExceptionLevelIDLabel" /></th>
                }
                <th style="border-top-left-radius: 20px">@localizer["ExceptionID"]</th>
                <th>@localizer["ExceptionCode"]</th>
                <th style="border-top-right-radius: 20px;">@localizer["ExceptionDescription"]</th>
            </tr>
        </thead>
        <tbody id="bootstrap-overrides">
            @foreach(ExceptionLevel e in Model.ExceptionslevelList)
            {
                value = Model.Level.ToString() + "|" + e.ExceptionLevelID.ToString();

                <tr id="Exception|@value" ondblclick="openPopupEdit('@e.ExceptionLevelID','@value')">
                    @if (AddExceptionLevel)
                    {
                        <td style="align-items:center; display:flex; box-shadow: 10px 10px 10px #FFFFFF; background-color: #FFFFFF" class="borders">
                            <img onclick="openPopupEdit('@e.ExceptionLevelID','@value')" class="evol-image wobble" src="~/images/edit.png" title="@localizer["ChangeException"] @ExceptionLevelIDLabel @localizer["Code"] = @e.ExceptionCode" />
                            @if (DeleteExceptionLevel)
                            {
                                <a asp-area="evolDP" asp-controller="DocCode" asp-action="DeleteExceptionLevel" asp-route-level="@Model.Level" asp-route-exceptionID="@e.ExceptionLevelID">
                                    <img onclick="return confirmExceptionDelete()" class="evol-image float" src="~/images/delete.png" title="@localizer["DeleteException"] @ExceptionLevelIDLabel @localizer["Code"] = @e.ExceptionCode" />
                                </a>
                            }
                        </td>
                    }
                    <td class="@(e == Model.ExceptionslevelList.Last() ? "last-row-l" : "")">@e.ExceptionLevelID</td>
                    <td>@e.ExceptionCode</td>
                    <td class="@(e == Model.ExceptionslevelList.Last() ? "last-row-r" : "")">@e.ExceptionDescription</td>
                </tr>
            }
        </tbody>
    </table>
}
@section Scripts
{
    <script type="text/javascript">
        function confirmExceptionDelete() {
            if (confirm(deleteMsgException)) {
                // User clicked "OK", handle the deletion
                return true;
            } else {
                // User clicked "Cancel", do nothing
                return false;
            }
        }
        function openPopupEdit(ID, localize) {
            document.getElementById("popupMessage").innerHTML = '@localizer["PopupMessageEdit"]';
            document.getElementById("ExceptionLevelID").value = ID;
            document.getElementById("ExceptionID").value = document.getElementById("Exception|" + localize).querySelector("td:nth-child(2)").textContent;
            document.getElementById("ExceptionCode").value = document.getElementById("Exception|" + localize).querySelector("td:nth-child(3)").textContent;
            document.getElementById("ExceptionDescription").value = document.getElementById("Exception|" + localize).querySelector("td:nth-child(4)").textContent;
            document.querySelector(".FormEdit").setAttribute('asp-route-source', 'Edit');
            document.getElementById("confirmPopupEdit").style.display = "flex";
        }
        function openPopupAdd() {
            document.getElementById('popupMessage').innerHTML = '@localizer["PopupMessageAdd"]';
            document.getElementById("ExceptionLevelID").value = "";
            document.getElementById("ExceptionID").value = "";
            document.getElementById("ExceptionCode").value = "";
            document.getElementById("ExceptionDescription").value = "";
            document.querySelector(".FormEdit").setAttribute('asp-route-source', 'Add');
            document.getElementById("confirmPopupEdit").style.display = "flex";
        }
        function confirmBtn() {
            return true;
        }
        function closePopup() {
            document.getElementById("confirmPopupEdit").style.display = "none";
            return false;
        }
    </script>
}