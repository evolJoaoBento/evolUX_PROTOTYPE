@using Shared.Models.Areas.evolDP
@using Shared.ViewModels.Areas.evolDP
@using Newtonsoft.Json;
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer localizer
@inject IConfiguration configuration

@model DocCodeConfigOptionsViewModel;
@{
    string siteURL = configuration.GetValue<string>("evolUXSiteURL");
}
@if (Model == null)
{
    <tr><td colspan="5" class="text-center">@localizer["NoModelData"]</td></tr>
}
else
{
    string value;
    int bitValue = 1;
    string submitTag = "SubmitAdd";
    if (TempData["Source"]?.ToString() == "ChangeDocCodeConfig")
        submitTag = "SubmitChange";
    string ExceptionLevel1IDLabel = TempData["ExceptionLevel1ID"]?.ToString();
    string ExceptionLevel2IDLabel = TempData["ExceptionLevel2ID"]?.ToString();
    string ExceptionLevel3IDLabel = TempData["ExceptionLevel3ID"]?.ToString();
    string ElectronicLabel = TempData["Electronic"]?.ToString();
    string ElectronicHideLabel = TempData["ElectronicHide"]?.ToString();
    string EMailLabel = TempData["EMail"]?.ToString();
    string EMailHideLabel = TempData["EMailHide"]?.ToString();
    string ArchiveLabel = TempData["Archive"]?.ToString();
    string FinishingLabel = TempData["Finishing"]?.ToString();
    if (string.IsNullOrEmpty(ExceptionLevel1IDLabel))
        ExceptionLevel1IDLabel = localizer["ExceptionLevel1ID"].Value;
    if (string.IsNullOrEmpty(ExceptionLevel2IDLabel))
        ExceptionLevel2IDLabel = localizer["ExceptionLevel2ID"].Value;
    if (string.IsNullOrEmpty(ExceptionLevel2IDLabel))
        ExceptionLevel3IDLabel = localizer["ExceptionLevel3ID"].Value;
    if (string.IsNullOrEmpty(ElectronicLabel))
        ElectronicLabel = localizer["Electronic"].Value;
    if (string.IsNullOrEmpty(ElectronicHideLabel))
        ElectronicHideLabel = localizer["ElectronicHide"].Value;
    if (string.IsNullOrEmpty(EMailLabel))
        EMailLabel = localizer["EMail"].Value;
    if (string.IsNullOrEmpty(EMailHideLabel))
        EMailHideLabel = localizer["EMailHide"].Value;
    if (string.IsNullOrEmpty(ArchiveLabel))
        ArchiveLabel = localizer["Archive"].Value;
    if (string.IsNullOrEmpty(FinishingLabel))
        FinishingLabel = localizer["Finishing"].Value;
    DocCodeConfig? dConfig = null;
    if (Model.DocCodeConfig.DocCodeConfigs != null && Model.DocCodeConfig.DocCodeConfigs.Count() > 0)
        dConfig = Model.DocCodeConfig.DocCodeConfigs[0];
<form id="AddDocDocConfigFrm" class="d-flex justify-content-center m-5" asp-area="evolDP" asp-controller="DocCode" asp-action="RegistDocCodeConfig">
    <table class="table table-sm table-hover table-collapse-seperate">
        <thead id="bootstrap-overrides" class="table-info sticky-header">
            <tr><td colspan="2">@localizer[TempData["Source"] + "Add"]</td></tr>
        </thead>
        <tbody id="bootstrap-overrides">
            @if (TempData["Source"]?.ToString() == "AddDocCodeConfig"
               || TempData["Source"]?.ToString() == "DocCode"
               || TempData["Source"]?.ToString() == "ChangeDocCodeConfig")
            {
                <tr>
                    <th>@localizer["DocLayout"]</th>
                    <td>@Model.DocCodeConfig.DocLayout</td>
                </tr>
                <tr>
                    <th>@localizer["DocType"]</th>
                    <td>
                        @if (Model.DocCodeConfig.DocType == null || string.IsNullOrEmpty(Model.DocCodeConfig.DocType))
                        {
                            @localizer["EmptyField"]
                        }
                        else
                        {
                            @Model.DocCodeConfig.DocType
                        }
                    </td>
                </tr>
            }
            else
            {
                <tr>
                    <th>@localizer["DocLayout"]</th>
                    <td><input id=DocLayout name=DocLayout type="text" maxlength="20" style="width: 100%"/></td>
                </tr>
                <tr>
                    <th>@localizer["DocType"]</th>
                    <td><input id=DocType name=DocType type="text" maxlength="8" style="width: 100%"/></td>
                </tr>
            }
            @if (TempData["Source"]?.ToString() == "AddDocCodeConfig"
               || TempData["Source"]?.ToString() == "ChangeDocCodeConfig")
            {
                <tr>
                    <th>@ExceptionLevel1IDLabel</th>
                    <td>
                    @if (Model.DocCodeConfig.ExceptionLevel1 == null || string.IsNullOrEmpty(Model.DocCodeConfig.ExceptionLevel1.ExceptionDescription))
                    {
                        @localizer["EmptyField"]
                    }
                    else
                    {
                        @Model.DocCodeConfig.ExceptionLevel1.ExceptionDescription
                    }
                    </td>
                </tr>
                <tr>
                    <th>@ExceptionLevel2IDLabel</th>
                    <td>
                    @if (Model.DocCodeConfig.ExceptionLevel2 == null || string.IsNullOrEmpty(Model.DocCodeConfig.ExceptionLevel2.ExceptionDescription))
                    {
                        @localizer["EmptyField"]
                    }
                    else
                    {
                        @Model.DocCodeConfig.ExceptionLevel2.ExceptionDescription
                    }
                    </td>
                </tr>
                <tr>
                    <th>@ExceptionLevel3IDLabel</th>
                    <td>
                    @if (Model.DocCodeConfig.ExceptionLevel3 == null || string.IsNullOrEmpty(Model.DocCodeConfig.ExceptionLevel3.ExceptionDescription))
                    {
                        @localizer["EmptyField"]
                    }
                    else
                    {
                        @Model.DocCodeConfig.ExceptionLevel3.ExceptionDescription
                    }
                    </td>
                </tr>
            }
            else
            {
                <tr>
                    <th>@ExceptionLevel1IDLabel</th>
                    <td>
                        <select name="Exceptionslevel1ID" style="width: 100%">
                            <option value="0">@localizer["EmptyField"]</option>
                            @foreach (ExceptionLevel e in Model.Exceptionslevel1List)
                            {
                                <option value="@e.ExceptionLevelID">@e.ExceptionCode - @e.ExceptionDescription </option>
                            }
                        </select>
                    </td>
                </tr>
                <tr>
                    <th>@ExceptionLevel2IDLabel</th>
                    <td>
                        <select name="Exceptionslevel2ID" style="width: 100%">
                            <option id="" value="0">@localizer["EmptyField"]</option>
                            @foreach (ExceptionLevel e in Model.Exceptionslevel2List)
                            {
                                <option id="" value="@e.ExceptionLevelID">@e.ExceptionCode - @e.ExceptionDescription </option>
                            }
                        </select>
                    </td>
                </tr>
                <tr>
                    <th>@ExceptionLevel3IDLabel</th>
                    <td>
                        <select name="Exceptionslevel3ID" style="width: 100%">
                            <option id="" value="0">@localizer["EmptyField"]</option>
                            @foreach (ExceptionLevel e in Model.Exceptionslevel3List)
                            {
                                <option id="" value="@e.ExceptionLevelID">@e.ExceptionCode - @e.ExceptionDescription </option>
                            }
                        </select>
                    </td>
                </tr>
            }
            <tr>
                <th>@localizer["DocDescription"]</th>
                <td>
                    <input id=DocDescription name=DocDescription type="text" maxlength="256" style="width: 100%" value="@Model.DocCodeConfig.DocDescription" />
                </td>
            </tr>
            <tr>
                <th>@localizer["PrintMatchCode"]</th>
                <td>
                    <input id=PrintMatchCode name=PrintMatchCode type="text" maxlength="10" style="width: 100%" value="@Model.DocCodeConfig.PrintMatchCode" />
                </td>
            </tr>
            @if (dConfig == null || (TempData["Source"]?.ToString() != "ChangeDocCodeConfig" && dConfig.IsEditable))
            {
                <tr>
                    <th>@localizer["StartDate"]</th>
                        <td><input id="StartDate" name="StartDate" type="datetime" value="@DateTime.Now.ToShortDateString()" /></td>
                </tr>
            }
            else
            {
                <tr>
                    <th>@localizer["StartDate"]</th>
                    <td>@DateTime.ParseExact(dConfig.StartDate.ToString(), "yyyyMMdd", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None).ToShortDateString()" /></td>
                </tr>
            }
            <tr>
                <th>@localizer["EnvMedia"]</th>
                <td>
                    <select name="EnvMediaID" style="width: 100%">
                    @if (dConfig != null && dConfig.EnvMediaID > 0)
                    {
                        <option value="@dConfig?.EnvMediaID">@dConfig.EnvMediaDesc</option>
                    }
                    @foreach (EnvelopeMedia e in Model.EnvMediaGroups.Where(x => dConfig?.EnvMediaID == null || x.EnvMediaGroupID != dConfig?.EnvMediaID))
                    {
                        <option value="@e.EnvMediaGroupID">@e.Description</option>
                    }
                    </select>
                </td>
            </tr>
            <tr>
                <th>@localizer["AggrCompatibility"]</th>
                <td>
                    <select name="AggrCompatibility" style="width: 100%">
                        @if (dConfig != null && dConfig?.AggrCompatibility >= 0)
                        {
                            value = "AggCompatibility" + dConfig.AggrCompatibility.ToString();
                            <option value="@dConfig.AggrCompatibility">@localizer[@value]</option>
                        }
                        @foreach (int a in Model.AggregationList.Where(x => (dConfig == null || x != dConfig.AggrCompatibility)))
                        {
                            value = "AggCompatibility" + a.ToString();
                            <option value="@a">@localizer[value]</option>
                        }
                    </select>
                </td>
            </tr>
            <tr>
                <th>@localizer["ExpCompany"] / @localizer["ServiceTask"]</th>
                <td>
                    <select name="ExpCode" style="width: 100%">
                        @if (dConfig != null &&  !string.IsNullOrEmpty(dConfig.ExpCode))
                        {
                            <option value="@dConfig.ExpCode">@dConfig.ExpCompanyName / @dConfig.ServiceTaskDesc</option>
                        }
                        @foreach (ExpCompanyServiceTask e in Model.ExpCodeList.Where(x => (dConfig == null || x.ExpCode != dConfig.ExpCode)))
                        {
                            <option value="@e.ExpCode">@Model.ExpCompanies.First(x => x.ID == e.ExpCompanyID).CompanyName / @Model.ServiceTasks.First(x => x.ServiceTaskID == e.ServiceTaskID).ServiceTaskDesc</option>
                        }
                    </select>
                </td>
            </tr>
            <tr>
                <th>@localizer["ExpeditionType"]</th>
                <td>
                    <select name="ExpeditionType" style="width: 100%">
                        @if (dConfig != null && dConfig.ExpeditionType > 0)
                        {
                            value = "ExpeditionType" + dConfig.ExpeditionType.ToString();
                            <option value="@dConfig.ExpeditionType">@localizer[value]</option>
                        }
                        @foreach (ExpeditionsType e in Model.ExpeditionTypes.Where(x => (dConfig == null || x.ExpeditionType != dConfig.ExpeditionType)))
                        {
                            value = "ExpeditionType" + e.ExpeditionType.ToString();
                            <option value="@e.ExpeditionType">@localizer[value]</option>
                        }
                    </select>
                </td>
            </tr>
                <tr>
                    <th>@localizer["Archive"]</th>
                    <td>
                        <select name="Archive" style="width: 100%">
                            @{bitValue = 2;}
                            @if (dConfig != null && dConfig.Archive >= 0)
                            {
                                value = Model.ArchiveList.FirstOrDefault(x => x.ID == dConfig.Archive).Code;
                                <option value="@dConfig.Archive">@localizer[value]</option>
                            }
                            @foreach (GenericOptionValue e in Model.ArchiveList.Where(x => (dConfig == null || x.ID != dConfig.Archive)))
                            {
                                value = "Archive" + (e.ID / bitValue).ToString();
                                <option value="@e.ID">@localizer[value]</option>
                            }
                        </select>
                    </td>
                </tr>
                <tr>
                    <th>@localizer["Finishing"]</th>
                    <td>
                        <select name="Finishing" style="width: 100%">
                            @if (dConfig != null && dConfig.Finishing >= 0)
                            {
                                value = Model.FinishingList.FirstOrDefault(x => x.ID == dConfig.Finishing).Code;
                                <option value="@dConfig.Finishing">@localizer[value]</option>
                            }
                            @foreach (GenericOptionValue e in Model.FinishingList.Where(x => (dConfig == null || x.ID != dConfig.Finishing)))
                            {
                                <option value="@e.ID">@localizer[e.Code]</option>
                            }
                        </select>
                    </td>
                </tr>
                <tr>
                    @if (dConfig != null)
                    {
                        value = dConfig.MaxProdDate;
                    }
                    else
                    {
                        value = "dd/mm/yyyy";
                    }
                    <th>@localizer["MaxProdDate"]</th>
                    <td><input id="MaxProdDate" name="MaxProdDate" type="datetime" value="@value" /></td>
                </tr>
                @if (Model.EmailList.List.Count() > 1)
                {
                    <tr>
                    <th>@localizer["EMail"]</th>
                    <td>
                        <select name="EMail" style="width: 100%">
                            @if (dConfig != null && dConfig.Email >= 0)
                            {
                                value = Model.EmailList.List.FirstOrDefault(x => x.ID == dConfig.Email).Code;
                                <option value="@dConfig.Email">@localizer[value]</option>
                            }
                            @foreach (GenericOptionValue e in Model.EmailList.List.Where(x => (dConfig == null || x.ID != dConfig.Email)).OrderBy(x => x.ID))
                            {
                                <option value="@e.ID">@localizer[e.Code]</option>
                            }
                        </select>
                    </td>
                </tr>
                }
                @if (!(bool)TempData["EmailJoin"] && Model.EmailList.HideList.Count() > 1)
                {
                    <tr>
                        <th>@localizer["EMailHide"]</th>
                        <td>
                            <select name="EMailHide" style="width: 100%">
                             @{bitValue = 128;}
                                @if (dConfig != null && dConfig.EmailHide >= 0)
                                {
                                    value = Model.EmailList.HideList.FirstOrDefault(x => x.ID == dConfig.EmailHide).Code;
                                    <option value="@dConfig.EmailHide">@localizer[value]</option>
                                }
                                @foreach (GenericOptionValue e in Model.EmailList.HideList.Where(x => (dConfig == null || x.ID != dConfig.EmailHide)).OrderBy(x => x.ID))
                                {
                                    <option value="@e.ID">@localizer[e.Code]</option>
                                }
                            </select>
                        </td>
                    </tr>
                }
                @if (Model.ElectronicList.List.Count() > 1)
                {
                    <tr>
                    <th>@localizer["Electronic"]</th>
                    <td>
                        <select name="Electronic" style="width: 100%">
                            @if (dConfig != null && dConfig.Electronic >= 0)
                            {
                                <option value="@dConfig.Electronic">@dConfig.ElectronicDesc</option>
                            }
                                @foreach (GenericOptionValue e in Model.ElectronicList.List.Where(x => (dConfig == null || x.ID != dConfig.Electronic)).OrderBy(x => x.ID))
                            {
                                <option value="@e.ID">@localizer[e.Code]</option>
                            }
                        </select>
                    </td>
                </tr>
                }
                @if (!(bool)TempData["ElectronicJoin"] && Model.ElectronicList.HideList.Count() > 1)
                {
                    <tr>
                        <th>@localizer["ElectronicHide"]</th>
                        <td>
                            <select name="EMailHide" style="width: 100%">
                                @{bitValue = 16;}
                                @if (dConfig != null && dConfig.ElectronicHide >= 0)
                                {
                                    value = Model.ElectronicList.HideList.FirstOrDefault(x => x.ID == dConfig.ElectronicHide).Code;
                                    <option value="@dConfig.ElectronicHide">@localizer[value]</option>
                                }
                                @foreach (GenericOptionValue e in Model.ElectronicList.HideList.Where(x => (dConfig == null || x.ID != dConfig.ElectronicHide)).OrderBy(x => x.ID))
                                {
                                    <option value="@e.ID">@localizer[e.Code]</option>
                                }
                            </select>
                        </td>
                    </tr>
                }
            </tbody>
        <tfoot id="bootstrap-overrides">
            <tr>
                <td colspan="2">
                    <input type="submit" value="@localizer[submitTag]" name="Submit" class="btn btn-block btn-outline-info" />
                </td>
            </tr>
        </tfoot>
    </table>
</form>
}