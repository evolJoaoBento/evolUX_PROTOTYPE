@using Shared.Models.Areas.evolDP
@using Shared.ViewModels.Areas.evolDP
@using Newtonsoft.Json;
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer localizer
@inject IConfiguration configuration

@model ServiceTaskViewModel;
@{
    string siteURL = configuration.GetValue<string>("evolUXSiteURL");
    bool AddServiceCompany = false;
    bool AddServiceTask = false;
    bool DeleteServiceTask = false;
    bool ExportServiceTask = false;
    bool AddServiceCompanyExpCodes = false;
    bool AddExpCode = false;
    bool DeleteExpCode = false;
    bool ExportExpCode = false;

    if (Model.Permissions.Find(x => x == "AddServiceCompanyExpCodes") != null) { AddServiceCompanyExpCodes = true; }
    if (Model.Permissions.Find(x => x == "AddServiceCompany") != null) { AddServiceCompany = true; }
    if (Model.Permissions.Find(x => x == "AddServiceTask") != null) { AddServiceTask = true; }
    if (Model.Permissions.Find(x => x == "DeleteServiceTask") != null) { DeleteServiceTask = true; }
    if (Model.Permissions.Find(x => x == "ExportServiceTask") != null) { ExportServiceTask = true; }
    if (Model.Permissions.Find(x => x == "AddExpCode") != null) { AddExpCode = true; }
    if (Model.Permissions.Find(x => x == "DeleteExpCode") != null) { DeleteExpCode = true; }
    if (Model.Permissions.Find(x => x == "ExportExpCode") != null) { ExportExpCode = true; }
}
<div id="TitlePage">
    <h1>@localizer["ServiceTask"]</h1>
    <a class='bx bx-left-arrow grow_01' style="color:rgb(90 205 239)" asp-area="evolDP" asp-controller="ServiceProvision" asp-action="ServiceWorkFlow">
    </a>
</div>
@if (Model == null)
{
    <tr><td colspan="5" class="text-center">@localizer["NoModelData"]</td></tr>
}
else
{
    ServiceTaskElement serviceTask = Model.ServiceTasksList.FirstOrDefault(x => x.ServiceTaskID == Model.ServiceTaskID);
    bool missingExpCompanies = Model.ExpCompanies.Where(x => Model.ExpCodes.Where(y => y.ExpCompanyID == x.ID).ToList().Count() == 0).Count() > 0;
    string localValue;
    string value = "";
    string Level0Name = "level";

    int level = 0;
    string idValue = "arrow" + level.ToString();
    string nameValue = "";
    <script>
        const deleteMsgServiceType = '@localizer["deleteMsgServiceType"]: "@serviceTask.ServiceTaskDesc"';
    </script>
    <div class="popup-container" id="confirmPopupEdit" style="display: none;">
        <div class="bgGradient">
            <div class="popup">
                <form class="align-content-center FormEdit" asp-area="evolDP" asp-controller="ServiceProvision" asp-action="SetServiceTask" asp-route-source="ServiceWorkFlowDetail">
                    <h1>@localizer["PopupMessageEdit"]</h1>
                    <div class="form-inputs">
                        <input style="display: none" id=ServiceTaskID name=ServiceTaskID type="number" value="@serviceTask.ServiceTaskID" />
                        <h6>@localizer["ServiceTaskCode"]</h6>
                        <input id=ServiceTaskCode name=ServiceTaskCode type="text" maxlength="15" value="@serviceTask.ServiceTaskCode" readonly />
                        <h6>@localizer["ServiceTaskDesc"]</h6>
                        <input id=ServiceTaskDesc name=ServiceTaskDesc type="text" maxlength="256" style="width: 100%" value="@serviceTask.ServiceTaskDesc" />
                        @{
                            List<ServiceTypeElement> complementList = new List<ServiceTypeElement>();
                            foreach (ServiceTypeElement ste in serviceTask.ServiceTypes)
                            {
                                if (!ste.ServiceTypeCode.StartsWith("PRINT"))
                                    complementList.Add(ste);
                                else
                                {
                                    string color = ste.ServiceTypeCode.Substring(5);
                                    if (color.Contains("BLACK"))
                                        color = color.Replace("BLACK", "COLOR");
                                    else
                                        color = color.Replace("COLOR", "BLACK");
                                    color = "PRINT" + color;
                                    ServiceTypeElement newServiceType = Model.ServiceTypesList.FirstOrDefault(x => x.ServiceTypeCode == color);
                                    if (newServiceType != null)
                                        complementList.Add(newServiceType);
                                }
                            }
                        }
                        <h6>@localizer["ComplementServiceTask"]</h6>
                        <select id=ComplementServiceTaskID name=ComplementServiceTaskID>
                            @foreach (ServiceTaskElement s in Model.ServiceTasksList.Where(x => complementList.All(b => x.ServiceTypes.Any(a => a.ServiceTypeCode == b.ServiceTypeCode))).ToList())
                            {
                                <option value="@s.ServiceTaskID">[@s.ServiceTaskCode] @s.ServiceTaskDesc</option>
                            }
                        </select>
                        @{
                            List<int> eModeList = new List<int>();
                            eModeList.Add(0);
                            eModeList.Add(1);
                            eModeList.Add(2);
                            if (serviceTask.ExternalExpeditionMode != null)
                            {
                                eModeList.Remove((int)serviceTask.ExternalExpeditionMode);
                                eModeList.Add(-1);
                            }
                        }
                        <h6>@localizer["ExternalExpeditionMode"]</h6>
                        <select id=ExternalExpeditionMode name=ExternalExpeditionMode>
                            @{
                                localValue = serviceTask.ExternalExpeditionMode == null ? "-1" : serviceTask.ExternalExpeditionMode.ToString();
                            }
                            <option value="@localValue">
                                @{
                                    localValue = "ExternalExpeditionMode" + localValue;
                                }
                                @localizer[localValue]
                            </option>
                            @foreach (int i in eModeList)
                            {
                                <option value="@i">
                                    @{
                                        localValue = "ExternalExpeditionMode" + i.ToString();
                                    }
                                    @localizer[localValue]
                                </option>
                            }
                        </select>
                        <h6>@localizer["StationExceededDesc"]</h6>
                        <input id=StationExceededDesc name=StationExceededDesc type="text" maxlength="50" style="width: 100%" value="@serviceTask.StationExceededDesc" />
                    </div>
                    <div class="popup-buttons">
                        <button class="popup-button" id="confirmEdit" name="Submit" onclick="return confirmBtn()" value="@localizer["SubmitChange"]">Confirmar</button>
                        <button class="popup-button" onclick="return closePopup()">Cancelar</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <div class="popup-container" id="confirmPopupAdd" style="display: none;">
        <div class="bgGradient">
            <div class="popup">
                <form class="align-content-center FormEdit" asp-area="evolDP" asp-controller="ServiceProvision" asp-action="AddServiceType" asp-route-servicetaskID="@serviceTask.ServiceTaskID">
                    <h1>@localizer["PopupMessageAdd"]</h1>
                    <div class="form-inputs">
                        <h6>@localizer["SelectServiceTask"]</h6>
                        <select id=ServiceTypeID name=ServiceTypeID>
                            @foreach (ServiceTypeElement st in Model.ServiceTypesList.Where(x => serviceTask.ServiceTypes.Where(y => y.ServiceTypeID == x.ServiceTypeID).ToList().Count() == 0).ToList())
                            {
                                <option value="@st.ServiceTypeID">@st.ServiceTypeDesc [@st.ServiceTypeCode]</option>
                            }
                        </select>
                    </div>
                    <div class="popup-buttons">
                        <button class="popup-button" id="confirmEdit" name="Submit" onclick="return confirmBtn()" value="@localizer["SubmitChange"]">Confirmar</button>
                        <button class="popup-button" onclick="return closePopup()">Cancelar</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <table class="table table-sm table-hover table-collapse-seperate table-shadow" style="margin-bottom: 40px;">
        <thead id="bootstrap-overrides" class="table-info sticky-header">
            <tr>
                <th rowspan="2" class="evol-fitcontent-column" style="text-align:center;border: none;background-color: transparent;vertical-align:middle">
                </th>
                <th style="vertical-align:middle; border-top-left-radius: 20px;" rowspan="2">@localizer["ServiceTaskCode"]</th>
                <th style="vertical-align:middle" rowspan="2">@localizer["ServiceTaskDesc"]</th>
                <th style="vertical-align:middle; border-top-right-radius: 20px;" colspan="3">@localizer["ServiceTaskConfigs"]</th>
            </tr>
            <tr>
                <th style="vertical-align:middle" title="@localizer["ComplementServiceTaskTip"]">@localizer["ComplementServiceTask"]</th>
                <th style="vertical-align:middle" title="@localizer["ExternalExpeditionModeTip"]">@localizer["ExternalExpeditionMode"]</th>
                <th style="vertical-align:middle" title="@localizer["StationExceededDescTip"]">@localizer["StationExceededDesc"]</th>
            </tr>
        </thead>
        <tbody id="bootstrap-overrides">
            <tr id="Show|" ondblclick="openPopupEdit()">
                <td class="evol-fitcontent-column-one borders" style="border: none; box-shadow: 10px 20px 10px #FFFFFF; background-color: #FFFFFF;">
                    @if (AddServiceTask)
                    {
                        <img onclick="openPopupEdit()" style="width:30px;height:30px" class="evol-image wobble" src="~/images/edit.png" title="@localizer["ChangeServiceTask"]" />
                    }
                </td>
                <td style="border-bottom-left-radius: 20px;">@serviceTask.ServiceTaskCode</td>
                <td>
                    @serviceTask.ServiceTaskDesc
                </td>
                <td>
                    @Model.ServiceTasksList.FirstOrDefault(x => x.ServiceTaskID == serviceTask.ComplementServiceTaskID)?.ServiceTaskDesc
                </td>
                <td>
                    @{
                        localValue = "ExternalExpeditionMode" + (serviceTask.ExternalExpeditionMode == null ? "-1" : serviceTask.ExternalExpeditionMode.ToString());
                    }
                    @localizer[localValue]
                </td>
                <td style="border-bottom-right-radius: 20px;">@serviceTask.StationExceededDesc</td>
            </tr>
        </tbody>
    </table>
    <table class="table table-sm table-hover table-collapse-seperate table-shadow" style="margin-bottom: 40px;">
        <thead id="bootstrap-overrides" class="table-info">
            <tr>
                <th class="evol-fitcontent-column-one" style="border:none;background-color:transparent">
                    <img onclick="openPopupAdd()" style="width:30px;height:30px" class="evol-image grow" src="~/images/add.png" title="@localizer["AddServiceType"]" />
                </th>
                <th style="border-top-left-radius: 20px;">@localizer["ServiceTypeDesc"]</th>
                <th style="border-top-right-radius: 20px;">@localizer["ServiceTypeCode"]</th>
            </tr>
        </thead>
        <tbody id="bootstrap-overrides">
            @foreach (ServiceTypeElement s in serviceTask.ServiceTypes)
            {
                value = s.ServiceTypeID.ToString();
                if(s == serviceTask.ServiceTypes.Last())
                {
                    <tr>
                        @if (AddServiceTask)
                        {
                            <td class="evol-fitcontent-column-one borders" style="border: none; vertical-align:middle; box-shadow: 10px 10px 10px #FFFFFF; background-color: #FFFFFF">
                                @if (DeleteServiceTask)
                                {
                                    <a asp-area="evolDP" asp-controller="ServiceProvision" asp-action="DeleteServiceType" asp-route-servicetaskID="@serviceTask.ServiceTaskID"  asp-route-servicetypeID="@s.ServiceTypeID">
                                            <img onclick="return confirmServiceTypeDelete('@s.ServiceTypeCode')" style="width:30px;height:30px" class="evol-image float" src="~/images/delete.png" title="@localizer["DeleteServiceType"] = @s.ServiceTypeCode" />
                                    </a>
                                }
                            </td>
                        }
                        <td style="border-bottom-left-radius: 20px;">@s.ServiceTypeDesc</td>
                        <td style="border-bottom-right-radius: 20px;">@s.ServiceTypeCode</td>
                    </tr>
                }
                else
                {
                    <tr>
                        @if (AddServiceTask)
                        {
                            <td class="evol-fitcontent-column-one borders" style="border: none;background-color: transparent;vertical-align:middle">
                                @if (DeleteServiceTask)
                                {
                                    <a asp-area="evolDP" asp-controller="ServiceProvision" asp-action="DeleteServiceType" asp-route-servicetaskID="@serviceTask.ServiceTaskID" asp-route-servicetypeID="@s.ServiceTypeID">
                                        <img onclick="return confirmServiceTypeDelete('@s.ServiceTypeCode')" style="width:30px;height:30px" class="evol-image float" src="~/images/delete.png" title="@localizer["DeleteServiceType"] = @s.ServiceTypeCode" />
                                    </a>
                                }
                            </td>
                        }
                        <td>@s.ServiceTypeDesc</td>
                        <td>@s.ServiceTypeCode</td>
                    </tr>
                }
            }
        </tbody>
    </table>

    <table class="table table-sm table-hover table-collapse-seperate table-shadow">
        <thead id="bootstrap-overrides" class="table-info sticky-header">
            <tr>
                <th class="evol-fitcontent-column-one" style="border:none;background-color:transparent">
                    @if (AddExpCode && missingExpCompanies)
                    {
                        <img onclick="EditRow('ExpCode')" style="width:30px;height:30px" class="evol-image grow" src="~/images/add.png" title="@localizer["AddExpCode"]" />
                    }
                </th>
                <th style="border-top-left-radius: 20px;">@localizer["ExpCompany"]</th>
                <th>@localizer["ExpCode"]</th>
                <th>@localizer["ExpCodeDesc"]</th>
                <th>@localizer["Priority"]</th>
                <th title="@localizer["DefaultExpCenterCodeTip"]">@localizer["DefaultExpCenterCode"]</th>
                <th title="@localizer["DefaultExpCompanyZoneTip"]">@localizer["DefaultExpCompanyZone"]</th>
                <th title="@localizer["CheckExpCompanySepCodesTip"]">@localizer["CheckExpCompanySepCodes"]</th>
                <th title="@localizer["PostalCodeStartTip"]" style="border-top-right-radius: 20px;">@localizer["PostalCodeStart"]</th>
            </tr>
        </thead>
        <tbody id="bootstrap-overrides">
            @if (AddExpCode && missingExpCompanies)
            {
                <tr id="Hide|ExpCode" style="display: none">
                    <form id="AddFrm|ExpCode" class="d-flex justify-content-center m-5" asp-area="evolDP" asp-controller="ServiceProvision" asp-action="AddExpCode" asp-route-servicetaskID="@serviceTask.ServiceTaskID">
                        <td style="align-items:center; display:flex;border:none;background-color:transparent">
                        <img onclick="CancelRow('ExpCode')" type="image" class="evol-image float" src="~/images/cancel.png" title="@localizer["Cancel"]" />
                        <input onclick="return true" type="image" value="@localizer["SubmitChange"]" class="evol-image float" name="Submit" src="~/images/Ok.png" />
                        </td>
                        <td>
                            <select id="ExpCompanyID" name="ExpCompanyID">
                            @foreach(Company comp in Model.ExpCompanies.Where(x => Model.ExpCodes.Where(y => y.ExpCompanyID == x.ID).ToList().Count() == 0))
                            {
                                <option value="@comp.ID">@comp.CompanyName</option>
                            }
                            </select>
                        </td>
                        <td colspan="7"><b>@localizer["SelectExpCompanyRef"]: </b>
                            <select id="RefExpCompanyID" name="RefExpCompanyID">
                            @foreach(Company comp in Model.ExpCompanies.Where(x => Model.ExpCodes.Where(y => y.ExpCompanyID == x.ID).ToList().Count() > 0))
                            {
                                <option value="@comp.ID">@comp.CompanyName</option>
                            }
                            </select>
                        </td>
                    </form>
                </tr>
            }
            @foreach (ExpCodeElement expCode in Model.ExpCodes)
            {
                if(expCode == Model.ExpCodes.Last())
                {
                    <tr>
                        <td class="evol-fitcontent-column-one borders" style="border:none;background-color:transparent">
                            <a asp-area="evolDP" asp-controller="ServiceProvision" asp-action="ExpCode" asp-route-expcodejson="@JsonConvert.SerializeObject(expCode)"
                       asp-route-serviceTaskDesc="@serviceTask.ServiceTaskDesc" asp-route-expCompanyName="@Model.ExpCompanies.FirstOrDefault(x => x.ID == expCode.ExpCompanyID)?.CompanyName" asp-route-source="ServiceWorkFlowDetail">
                                <img style="width:30px;height:30px" class="evol-image rotate_01" src="~/images/config.png" title="@localizer["ExpCodeConfig"]" />
                            </a>
                        </td>
                        <td style="border-bottom-left-radius: 20px;">@Model.ExpCompanies.FirstOrDefault(x => x.ID == expCode.ExpCompanyID)?.CompanyName</td>
                        <td>@expCode.ExpCode</td>
                        <td>@expCode.ExpCodeDesc</td>
                        <td>@expCode.Priority</td>
                        <td>@expCode.DefaultExpCenterCode</td>
                        <td>@expCode.DefaultExpCompanyZone</td>
                        @{
                            value = expCode.CheckExpCompanySepCodes ? "checked" : "";
                        }
                        <td><input type="checkbox" id="CheckExpCompanySepCodes" disabled @value /></td>
                        <td style="border-bottom-right-radius: 20px;">@expCode.PostalCodeStart</td>
                    </tr>
                }
                else
                {
                    <tr>
                        <td class="evol-fitcontent-column-one borders" style="border:none;background-color:transparent">
                            <a asp-area="evolDP" asp-controller="ServiceProvision" asp-action="ExpCode" asp-route-expcodejson="@JsonConvert.SerializeObject(expCode)"
                           asp-route-serviceTaskDesc="@serviceTask.ServiceTaskDesc" asp-route-expCompanyName="@Model.ExpCompanies.FirstOrDefault(x => x.ID == expCode.ExpCompanyID)?.CompanyName" asp-route-source="ServiceWorkFlowDetail">
                                <img style="width:30px;height:30px" class="evol-image rotate_01" src="~/images/config.png" title="@localizer["ExpCodeConfig"]" />
                            </a>
                        </td>
                        <td>@Model.ExpCompanies.FirstOrDefault(x => x.ID == expCode.ExpCompanyID)?.CompanyName</td>
                        <td>@expCode.ExpCode</td>
                        <td>@expCode.ExpCodeDesc</td>
                        <td>@expCode.Priority</td>
                        <td>@expCode.DefaultExpCenterCode</td>
                        <td>@expCode.DefaultExpCompanyZone</td>
                        @{
                            value = expCode.CheckExpCompanySepCodes ? "checked" : "";
                        }
                        <td><input type="checkbox" id="CheckExpCompanySepCodes" disabled @value /></td>
                        <td>@expCode.PostalCodeStart</td>
                    </tr>
                }
            }
        </tbody>
    </table>

}
@section Scripts
    {
    <script type="text/javascript">
        function confirmServiceTypeDelete(value) {
            if (confirm(deleteMsgServiceType.replace("@@#ServiceTypeCode#@@", value))) {
                // User clicked "OK", handle the deletion
                return true;
            } else {
                // User clicked "Cancel", do nothing
                return false;
            }
        }
        function openPopupEdit() {
            document.getElementById("confirmPopupEdit").style.display = "flex";
        }
        function openPopupAdd() {
            document.getElementById("confirmPopupAdd").style.display = "flex";
        }
        function confirmBtn() {
            return true;
        }
        function closePopup() {
            document.getElementById("confirmPopupEdit").style.display = "none";
            document.getElementById("confirmPopupAdd").style.display = "none";
            return false;
        }
    </script>
}