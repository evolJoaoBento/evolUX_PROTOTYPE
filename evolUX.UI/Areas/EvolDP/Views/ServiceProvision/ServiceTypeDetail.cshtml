@using Shared.Models.Areas.evolDP
@using Shared.ViewModels.Areas.evolDP
@using Newtonsoft.Json;
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer localizer
@inject IConfiguration configuration

@model ServiceTypeDetailViewModel;
@{
    int colWidth;
    string siteURL = configuration.GetValue<string>("evolUXSiteURL");
    bool AddServiceCompany = false;
    bool AddServiceTask = false;
    bool DeleteServiceTask = false;
    bool ExportServiceTask = false;
    bool AddServiceCompanyExpCodes = false;
    bool AddExpCode = false;
    bool DeleteExpCode = false;
    bool ExportExpCode = false;

    if (Model.Permissions.Find(x => x == "AddServiceCompanyExpCodes") != null) { AddServiceCompanyExpCodes = true; }
    if (Model.Permissions.Find(x => x == "AddServiceCompany") != null) { AddServiceCompany = true; }
    if (Model.Permissions.Find(x => x == "AddServiceTask") != null) { AddServiceTask = true; }
    if (Model.Permissions.Find(x => x == "DeleteServiceTask") != null) { DeleteServiceTask = true; }
    if (Model.Permissions.Find(x => x == "ExportServiceTask") != null) { ExportServiceTask = true; }
    if (Model.Permissions.Find(x => x == "AddExpCode") != null) { AddExpCode = true; }
    if (Model.Permissions.Find(x => x == "DeleteExpCode") != null) { DeleteExpCode = true; }
    if (Model.Permissions.Find(x => x == "ExportExpCode") != null) { ExportExpCode = true; }
}
@if (Model == null)
{
    <div id = "TitlePage" >
        <h1>@localizer["ServiceTypeDetail"]</h1>
    </div>
    <a class='bx bx-left-arrow grow_01' style="color:rgb(90 205 239)" asp-area="evolDP" asp-controller="ServiceProvision" asp-action="ServiceTypes">
    </a>
    @localizer["NoModelData"]
}
else
{
    string headerDesc = Model.Type.ServiceTypeDesc;

    <div id="TitlePage">
        <h1>@localizer["ServiceTypeDetail"]: @headerDesc</h1>
    </div>
    <a class='bx bx-left-arrow grow_01' style="color:rgb(90 205 239)" asp-area="evolDP" asp-controller="ServiceProvision" asp-action="ServiceTypes">
    </a>
    string value = "";
    string Level0Name = "level";

    int level = 0;
    string idValue = "arrow" + level.ToString();
    string nameValue = "";
    string arrowid = "arrow";
    colWidth = 0;
    if (AddServiceTask)
        colWidth++;
    if (Model.Type.ServicesList.Where(x => x.CompanyList.Count() > 0).ToList().Count() > 0)
        colWidth++;
    colWidth = 30 * colWidth;
    int colspan = 3;
    <div class="popup-container" id="confirmPopupEdit" style="display: none;">
        <div class="bgGradient">
            <div class="popup">
                <form class="align-content-center FormEdit" asp-area="evolDP" asp-controller="ServiceProvision" asp-action="SetService">
                    <h1 id="popupMessage"></h1>
                    <div class="form-inputs">
                        <input style="display: none" id=ServiceTypeID name=ServiceTypeID type="number" value="@Model.Type.ServiceTypeID" />
                        <input style="display: none" id=ServiceID name=ServiceID type="number" value="0" />
                        <h6>@localizer["ServiceDesc"]</h6>
                        <input id=ServiceDesc name=ServiceDesc type="text" maxlength="256" style="width: 100%" value=""/>
                        <h6>@localizer["ServiceCode"]</h6>
                        <input id=ServiceCode name=ServiceCode type="text" maxlength="25" style="width: 100%" value=""/>
                        <h6>@localizer["MatchCode"]</h6>
                        <input id=MatchCode name=MatchCode type="text" maxlength="50" style="width: 100%" value=""/>
                    </div>
                    <div class="popup-buttons">
                        <button class="popup-button" id="confirmEdit" name="Submit" onclick="return confirmBtn()" value="@localizer["SubmitChange"]">Confirmar</button>
                        <button class="popup-button" onclick="return closePopup()">Cancelar</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <table class="table table-sm table-hover table-collapse-seperate table-shadow">
        <thead id="bootstrap-overrides" class="table-info sticky-header">
            <tr>
                @if (colWidth > 0)
                {
                    colspan++;
                    <th class="evol-fitcontent-column borders" style="text-align: center">
                    @if (AddServiceTask)
                    {
                            <img onclick="openPopupAdd()" style="background:none; width:30px;height:30px;" class="grow" src="~/images/add.png" title="@localizer["ChangeServiceType"]" />
                    }
                    </th>
                }
                <th style="border-top-left-radius: 20px;">@localizer["ServiceDesc"]</th>
                <th>@localizer["ServiceCode"]</th>
                <th title="@localizer["MatchCodeTip"]" style = "border-top-right-radius: 20px;">@localizer["MatchCode"]</th>
            </tr>
        </thead>
        <tbody id="bootstrap-overrides">
            @foreach(ServiceElement s in Model.Type.ServicesList)
            {
                value = s.ServiceID.ToString();
                level++;
                nameValue = Level0Name + level.ToString();
                arrowid = "arrow" + level.ToString();
                idValue = "arrow" + nameValue;
                @if (AddServiceTask)
                {
                    <div class="popup-container confirmPopupEditService FormEdit" id="Edit|@value" style="display: none;">
                        <div class="bgGradient">
                            <div class="popup">
                                <form class="align-content-center" asp-area="evolDP" asp-controller="ServiceProvision" asp-action="SetService"
                                    asp-route-serviceJson="@JsonConvert.SerializeObject(s)">
                                    <h1>@localizer["PopupMessageEdit"]</h1>
                                    <div class="form-inputs">
                                        <input style="display: none" id=ServiceTypeID name=ServiceTypeID type="number" value="@Model.Type.ServiceTypeID" />
                                        <input style="display: none" id=ServiceID name=ServiceID type="number" value="0" />
                                        <h6>@localizer["ServiceDesc"]</h6>
                                        <input id=ServiceDesc name=ServiceDesc type="text" maxlength="256" style="width: 100%" value="@s.ServiceDesc" />
                                        <h6>@localizer["ServiceCode"]</h6>
                                        <input id=ServiceCode name=ServiceCode type="text" maxlength="25" style="width: 100%" value="@s.ServiceCode" />
                                        <h6>@localizer["MatchCode"]</h6>
                                        <input id="MatchCode" name=MatchCode type="text" maxlength="50" style="width: 100%" value="@s.MatchCode" />
                                    </div>
                                    <div class="popup-buttons">
                                        <button class="popup-button" id="confirmEdit" name="Submit" onclick="return confirmBtn()" value="@localizer["SubmitChange"]">Confirmar</button>
                                        <button class="popup-button" onclick="return closePopup()">Cancelar</button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                }
                <tr id="Show|@value" ondblclick="openPopupEdit('@value')">
                    @if (colWidth > 0)
                    {
                        @if (s.CompanyList.Count() > 0)
                        {
                            <td class="borders collapsible" style="align-items:center; display:flex; justify-content: center; @(s == Model.Type.ServicesList.Last() ? "box-shadow: 7px 10px 10px #FFFFFF; background-color: #FFFFFF" : "")" id="@idValue" onclick="javascript:showDetail('@nameValue','@arrowid')">
                                @if (AddServiceTask)
                                {
                                    <img onclick="openPopupEdit('@value')" class="evol-image wobble" src="~/images/edit.png" title="@localizer["ChangeService"]" />
                                }
                                <a class="evol-arrow bx bxs-chevron-down grow" id="@arrowid"></a>
                            </td>
                        }
                        else
                        {
                            <td class="borders" style="align-items:center; display:flex; justify-content: center; @(s == Model.Type.ServicesList.Last() ? "box-shadow: 7px 10px 10px #FFFFFF; background-color: #FFFFFF" : "")">
                                @if (AddServiceTask)
                                {
                                    <img onclick="openPopupEdit('@value')" class="evol-image wobble" src="~/images/edit.png" title="@localizer["ChangeService"]" />
                                }
                            </td>
                        }
                    }
                    <td class="@(s == Model.Type.ServicesList.Last() ? "last-row-l" : "")">@s.ServiceDesc</td>
                    <td>@s.ServiceCode</td>
                    <td class="@(s == Model.Type.ServicesList.Last() ? "last-row-r" : "")">@s.MatchCode</td>
                </tr>

                @if (s.CompanyList.Count() > 0)
                {
                    <tr id="@nameValue" class="borders" style="display: none">
                        <td colspan="@colspan" class="table-collapse">
                            <table class="table table-sm table-hover table-collapse-seperate collapsed-table table-shadow">
                                <thead id="bootstrap-overrides" class="table-info">
                                    <tr>
                                        <th style="border-top-left-radius: 20px; border-top-right-radius: 20px;">@localizer["ServiceCompany"]</th>
                                    </tr>
                                </thead>
                                <tbody id="bootstrap-overrides">
                                    @foreach (int c in s.CompanyList)
                                    {
                                        <tr>
                                            <td class="@(c == s.CompanyList.Last() ? "last-row-l last-row-r" : "")">@Model.ServiceCompanies.FirstOrDefault(x => x.ID == c).CompanyName</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
    <script>
        var headerDesc = "@headerDesc";
    </script>
}
@section Scripts
    {
    <script type="text/javascript">
        function RegistModeChange()
        {
            var checkbox = document.getElementById("RegistMode");
            chkElements = document.querySelectorAll('input[id^="checkedDRFlag"]');
            chkElements.forEach(tElement => {
                tElement.checked = checkbox.checked;
            });
        }
        function openPopupEdit(value) {
            document.getElementById("Edit|" + value).style.display = "flex";
        }
        function openPopupAdd() {
            document.getElementById('popupMessage').innerHTML = '@localizer["PopupMessageAdd"]: ' + headerDesc;
            document.getElementById("ServiceDesc").value = "";
            document.getElementById("ServiceCode").value = "";
            document.getElementById("MatchCode").value = "";
            document.getElementById("confirmPopupEdit").style.display = "flex";
        }
        function confirmBtn() {
            return true;
        }
        function closePopup() {
            document.getElementById("confirmPopupEdit").style.display = "none";
            var elements = document.querySelectorAll(".confirmPopupEditService");
            for (var i = 0; i < elements.length; i++) {
                elements[i].style.display = "none";
            }
            return false;
        }
    </script>
}