@using Shared.Models.Areas.evolDP
@using Shared.ViewModels.Areas.evolDP
@using Newtonsoft.Json;
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer localizer
@inject IConfiguration configuration

@model ServiceCompanyExpCodeConfigViewModel;
@{
    string siteURL = configuration.GetValue<string>("evolUXSiteURL");
    string source = TempData["Source"].ToString();
    bool AddServiceCompany = false;
    bool AddServiceTask = false;
    bool DeleteServiceTask = false;
    bool ExportServiceTask = false;
    bool AddServiceCompanyExpCodes = false;
    bool AddExpCode = false;
    bool DeleteExpCode = false;
    bool ExportExpCode = false;
    bool DeleteServiceCompanyExpCodes = false;

    if (Model.Permissions.Find(x => x == "AddServiceCompanyExpCodes") != null) { AddServiceCompanyExpCodes = true; }
    DeleteServiceCompanyExpCodes = AddServiceCompanyExpCodes;
    if (Model.Permissions.Find(x => x == "AddServiceCompany") != null) { AddServiceCompany = true; }
    if (Model.Permissions.Find(x => x == "AddServiceTask") != null) { AddServiceTask = true; }
    if (Model.Permissions.Find(x => x == "DeleteServiceTask") != null) { DeleteServiceTask = true; }
    if (Model.Permissions.Find(x => x == "ExportServiceTask") != null) { ExportServiceTask = true; }
    if (Model.Permissions.Find(x => x == "AddExpCode") != null) { AddExpCode = true; }
    if (Model.Permissions.Find(x => x == "DeleteExpCode") != null) { DeleteExpCode = true; }
    if (Model.Permissions.Find(x => x == "ExportExpCode") != null) { ExportExpCode = true; }
    if (source == "ServiceWorkFlowDetail")
    {
        <div id="TitlePage">
            <h1>@localizer["ExpCodeConfig"]</h1>
            <h2><b>@TempData["ServiceTaskDesc"] / @TempData["ExpCompanyName"]</b></h2>
            @if (Model != null)
            {
                <h2>
                    @Model.ServiceCompany.CompanyName / @localizer["ExpCenter"] [@Model.ExpCenterCode]
                </h2>
            }
            <a class='bx bx-left-arrow grow' style="color:rgb(90 205 239)" asp-area="evolDP" asp-controller="ServiceProvision" asp-action="ExpCode" asp-route-serviceCompanyJson="@JsonConvert.SerializeObject(Model.ServiceCompany)"
               asp-route-expcodejson="@JsonConvert.SerializeObject(Model.ExpCode)" asp-route-expcentercode="@Model.ExpCenterCode"
               asp-route-source="@source" asp-route-servicetaskdesc="@TempData["ServiceTaskDesc"]" asp-route-expcompanyname="@TempData["ExpCompanyName"]">
            </a>
        </div>
    }
    else
    {
        <div id="TitlePage">
            <h1>@localizer["ExpCodeConfig"]</h1>
            @if (Model != null)
            {
                <h2>
                    <b>
                        @Model.ServiceCompany.CompanyName
                    </b>
                </h2>
            }
            <h2>@TempData["ServiceTaskDesc"] / @TempData["ExpCompanyName"] / @localizer["ExpCenter"] [@Model.ExpCenterCode]</h2>
            <a class='bx bx-left-arrow grow' style="color:rgb(90 205 239)" asp-area="evolDP" asp-controller="ServiceProvision" asp-action="ServiceCompanyExpCodes" asp-route-serviceCompanyJson="@JsonConvert.SerializeObject(Model.ServiceCompany)">
            </a>
        </div>
    }
}
@if (Model == null)
{
    <tr><td colspan="5" class="text-center">@localizer["NoModelData"]</td></tr>
}
else
{
    ExpCodeElement expCode = Model.ExpCode;
    string localValue;
    string value = "";
    string Level0Name = "level";

    int level = 0;
    string idValue = "arrow" + level.ToString();
    string nameValue = "";
    Company serviceCompany = Model.ServiceCompany;
    FulfillMaterialCode fCode;  
    <script>
        const deleteServiceCompanyExpLevelMsg = '@localizer["deleteServiceCompanyExpLevelMsg"]"';
    </script>

    <table class="table table-sm table-hover table-collapse-seperate">
        <thead id="bootstrap-overrides" class="table-info sticky-header">
            <tr>
                @if (AddServiceCompanyExpCodes)
                {
                    <th class="evol-fitcontent-column-one" style="text-align:center;border:none;background-color:transparent">
                        <img onclick="EditRow('')" style="width:30px;height:30px" class="evol-image grow" src="~/images/add.png" title="@localizer["AddServiceCompanyExpLevel"]" />
                    </th>
                }
                <th>@localizer["ExpLevel"]</th>
                <th>@localizer["FullFillMaterialCode"]</th>
                <th>@localizer["DocMaxSheets"]</th>
                <th>@localizer["Barcode"]</th>
            </tr>
        </thead>
        <tbody id="bootstrap-overrides">
            @foreach (ServiceCompanyExpCodeConfig config in Model.Configs)
            {
               @if (AddServiceCompanyExpCodes)
                {
                    <tr id="Hide|" style="display: none">
                        <form id="AddFrm|" class="d-flex justify-content-center m-5" asp-area="evolDP" asp-controller="ServiceProvision" asp-action="ChangeServiceCompanyExpLevel"
                  asp-route-serviceCompanyJson="@JsonConvert.SerializeObject(serviceCompany)"
                  asp-route-expcodejson="@JsonConvert.SerializeObject(expCode)" asp-route-expcentercode="@Model.ExpCenterCode"
                  asp-route-source="@source" asp-route-servicetaskdesc="@TempData["ServiceTaskDesc"]" asp-route-expcompanyname="@TempData["ExpCompanyName"]"
                  asp-route-explevel="-1">
                        <td style="align-items:center; display:flex; justify-content:center; margin-top:3px" class="borders">
                            <img onclick="CancelRow('')" type="image" class="evol-image grow" src="~/images/cancel.png" title="@localizer["Cancel"]" />
                            <input onclick="return true" type="image" value="@localizer["SubmitChange"]" class="evol-image grow" name="Submit" src="~/images/Ok.png" />
                        </td>
                        <td></td>
                        <td>
                            <select id="ServiceCompanyID" name="ServiceCompanyID">
                            @foreach (FulfillMaterialCode f in Model.FulfillMaterialCodes)
                            {
                                <option value="@f.FullFillMaterialCode">@f.Description</option>
                            }
                            </select>
                        </td>
                        <td><input type="number" id="DocMaxSheets" name="DocMaxSheets" max="2147483647" value="0" /></td>
                        <td><input type="text" id="Barcode" name="Barcode" maxlength="256" value="" title="@localizer["BarcodeTip"]" /></td>
                        </form>
                    </tr>
                }
                value = config.ExpLevel.ToString();
                <tr id="Show|@value" ondblclick="EditRow('@value')">
                    @if (AddServiceCompanyExpCodes)
                    {
                        <td style="align-items:center; display:flex" class="borders">
                            <img onclick="EditRow('@value')" class="evol-image grow" src="~/images/edit.png" title="@localizer["ChangeServiceCompanyExpLevel"]" />
                            @if (DeleteServiceCompanyExpCodes)
                            {
                            <a asp-area="evolDP" asp-controller="ServiceProvision" asp-action="DeleteServiceCompanyExpLevel" 
                                asp-route-serviceCompanyJson="@JsonConvert.SerializeObject(serviceCompany)"
                                asp-route-expcodejson="@JsonConvert.SerializeObject(expCode)" asp-route-expcentercode="@Model.ExpCenterCode"
                                asp-route-source="@source" asp-route-servicetaskdesc="@TempData["ServiceTaskDesc"]" asp-route-expcompanyname="@TempData["ExpCompanyName"]"
                                asp-route-explevel="@config.ExpLevel">
                                    <img onclick="return confirmServiceCompanyExpLevelDelete()" class="evol-image grow" src="~/images/delete.png" title="@localizer["DeleteServiceCompanyExpLevel"] = @config.ExpLevel" />
                            </a>
                            }                        
                        </td>
                    }
                    <td>@config.ExpLevel</td>
                    <td>@config.FullFillMaterialCode</td>
                    <td>@config.DocMaxSheets</td>
                    <td>@config.Barcode</td>
                </tr>
                @if (AddServiceCompanyExpCodes)
                {
                    <tr id="Hide|@value" style="display: none">
                        <form id="AddFrm|@value" class="d-flex justify-content-center m-5" asp-area="evolDP" asp-controller="ServiceProvision" asp-action="ChangeServiceCompanyExpLevel"
                  asp-route-serviceCompanyJson="@JsonConvert.SerializeObject(serviceCompany)"
                  asp-route-expcodejson="@JsonConvert.SerializeObject(expCode)" asp-route-expcentercode="@Model.ExpCenterCode"
                  asp-route-source="@source" asp-route-servicetaskdesc="@TempData["ServiceTaskDesc"]" asp-route-expcompanyname="@TempData["ExpCompanyName"]"
                  asp-route-explevel="@config.ExpLevel">
                        <td style="align-items:center; display:flex; justify-content:center; margin-top:3px" class="borders">
                            <input onclick="return true" type="image" value="@localizer["SubmitChange"]" class="evol-image grow" name="Submit" src="~/images/Ok.png" />
                        </td>
                        <td>@config.ExpLevel</td>
                        <td>
                            <select id="ServiceCompanyID" name="ServiceCompanyID">
                            @{
                                fCode = Model.FulfillMaterialCodes.FirstOrDefault(x => x.FullFillMaterialCode == config.FullFillMaterialCode);
                            }
                                <option value="@fCode.FullFillMaterialCode">@fCode.Description</option>
                                    @foreach (FulfillMaterialCode f in Model.FulfillMaterialCodes.Where(x => x.FullFillMaterialCode != config.FullFillMaterialCode))
                            {
                                <option value="@f.FullFillMaterialCode">@f.Description</option>
                            }
                            </select>
                        </td>
                        <td><input type="number" id="DocMaxSheets" name="DocMaxSheets" max="2147483647" value="@config.DocMaxSheets" /></td>
                        <td><input type="text" id="Barcode" name="Barcode" maxlength="256" value="@config.Barcode" title="@localizer["BarcodeTip"]" /></td>
                        </form>
                    </tr>
                }
            }
        </tbody>
    </table>

}
@section Scripts
    {
    <script type="text/javascript">
        function CancelRow(value) {
            eShide('Hide|' + value);
            eSshow('Show|' + value);

            var obj = document.getElementById("AddFrm|" + value);
            obj.disabled = true;
            return false;
        }
        function EditRow(value) {
            eShide('Show|' + value);
            eSshow('Hide|' + value);
            var obj = document.getElementById("AddFrm|" + value);
            obj.disabled = false;

            let str = 'Hide|' + value;
            trElements = document.querySelectorAll('tr[id^="Hide|"]');
            trElements.forEach(tElement => {
                if (tElement.id != str) {
                    let val = tElement.id.substring(5);
                    CancelRow(val);
                }
            });
        }
        function confirmServiceCompanyExpLevelDelete() {
            if (confirm(deleteServiceCompanyExpLevelMsg)) {
                // User clicked "OK", handle the deletion
                return true;
            } else {
                // User clicked "Cancel", do nothing
                return false;
            }
        }
        function isClickInsideTr(element) {
            while (element) {
                if (element.id.includes('Hide|') || element.classList.contains('evol-image')) {
                    return true;
                }
                element = element.parentElement;
            }
            return false;
        }
        document.addEventListener('click', function (event) {
            if (!isClickInsideTr(event.target)) {
                trElements = document.querySelectorAll('tr[id^="Hide|"]');
                trElements.forEach(tElement => {
                    if (/^Hide\|\d+/.test(tElement.id)) {
                        let val = tElement.id.substring(5);
                        CancelRow(val);
                    }
                });
            }
        });
    </script>
}