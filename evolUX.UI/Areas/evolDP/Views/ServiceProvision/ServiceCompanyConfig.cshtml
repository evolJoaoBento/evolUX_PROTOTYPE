@using Shared.Models.Areas.evolDP
@using Shared.ViewModels.Areas.evolDP
@using Newtonsoft.Json;
@using Microsoft.AspNetCore.Mvc.Localization
@using System.Globalization;
@inject IViewLocalizer localizer
@inject IConfiguration configuration

@model ServiceCompanyConfigViewModel;
@{
    string siteURL = configuration.GetValue<string>("evolUXSiteURL");
    bool AddServiceCompany = false;
    bool AddServiceTask = false;
    bool DeleteServiceTask = false;
    bool ExportServiceTask = false;
    bool AddServiceCompanyExpCodes = false;
    bool AddExpCode = false;
    bool DeleteExpCode = false;
    bool ExportExpCode = false;

    if (Model.Permissions.Find(x => x == "AddServiceCompanyExpCodes") != null) { AddServiceCompanyExpCodes = true; }
    if (Model.Permissions.Find(x => x == "AddServiceCompany") != null) { AddServiceCompany = true; }
    if (Model.Permissions.Find(x => x == "AddServiceTask") != null) { AddServiceTask = true; }
    if (Model.Permissions.Find(x => x == "DeleteServiceTask") != null) { DeleteServiceTask = true; }
    if (Model.Permissions.Find(x => x == "ExportServiceTask") != null) { ExportServiceTask = true; }
    if (Model.Permissions.Find(x => x == "AddExpCode") != null) { AddExpCode = true; }
    if (Model.Permissions.Find(x => x == "DeleteExpCode") != null) { DeleteExpCode = true; }
    if (Model.Permissions.Find(x => x == "ExportExpCode") != null) { ExportExpCode = true; }

    CultureInfo culture = CultureInfo.CurrentCulture;
    string decimalSeparator = culture.NumberFormat.NumberDecimalSeparator;
}
@if (Model == null || Model.Configs == null || Model.Configs.Count() == 0)
{
    <tr><td colspan="5" class="text-center">@localizer["NoModelData"]</td></tr>
}
else
{
    DateTime startDateDT;
    string startDateDesc = "";

    Company serviceCompany = Model.ServiceCompany;
    string serviceTypeDesc = Model.Configs.First().ServiceTypeDesc;
    int serviceTypeID = Model.Configs.First().ServiceTypeID;
    List<ServiceElement> servicesNotInList = new List<ServiceElement>();
    string value = "";
    int level0 = 0, level1 = 0;
    string idValue = "arrow" + level0.ToString();
    string nameValue = "";
    string headerDesc1 = serviceCompany.CompanyName + " - " + Model.Configs.First().ServiceTypeDesc;
    string headerDesc2 = "";
    string doubleStr;
    if (Model.CostDate > 0)
    {
        startDateDesc = Model.CostDate.ToString();
        if (DateTime.TryParseExact(startDateDesc, "yyyyMMdd", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, out startDateDT))
            startDateDesc = startDateDT.ToShortDateString();
        headerDesc2 = localizer["CostDate"].Value + " " + startDateDesc;
        value = "Service|" + Model.CostDate.ToString();
    }
    if (Model.ServiceID > 0)
        headerDesc2 += " / " + Model.Configs.First().ServiceDesc;

    string startDisplay = "";
    if (Model.ServiceID == 0)
        startDisplay = "display: none";
    if (Model.Services != null)
    {
        foreach (ServiceElement s in Model.Services.Where(x => x.ServiceTypeID == serviceTypeID).ToList())
        {
            if (Model.Configs.Where(x => x.ServiceID == s.ServiceID).Count() == 0)
                servicesNotInList.Add(s);
        }
    }

    <div id="TitlePage">
        <h1>@localizer["ServiceCompanyConfig"]</h1>
        <h2>@headerDesc1</h2>
    </div>
    <div>
        <a class='bx bx-left-arrow' style="color:rgb(90 205 239)" asp-area="evolDP" asp-controller="ServiceProvision" asp-action="ServiceCompany" asp-route-serviceompany="@JsonConvert.SerializeObject(Model.ServiceCompany)"
       asp-route-startdate="@Model.CostDate" asp-route-pageservicetypeid="@Model.Configs.First().ServiceTypeID" asp-route-pageserviceid="@Model.ServiceID">
        </a>
    </div>
    <div id ="TitlePage">
    @if (!string.IsNullOrEmpty(headerDesc2))
    {
        <h2>@headerDesc2
            @if (AddServiceCompany && Model.CostDate == 0 && Model.ServiceID == 0)
            {
                <img onclick="EditRow('@value')" style="background:none; width:25px;height:25px;" src="~/images/add.png" title="@localizer["ServiceCompanyConfigAdd"]" />
            }
        </h2>
    }
    </div>
    @foreach (var cDate in Model.Configs.Select(x => new { x.CostDate}).Distinct().ToList())
    {
       startDateDesc = cDate.ToString();
        if (DateTime.TryParseExact(startDateDesc, "yyyyMMdd", System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, out startDateDT))
            startDateDesc = startDateDT.ToShortDateString();
        value = "Service|" + cDate.ToString();
        @if (AddServiceCompany && Model.CostDate == 0 && Model.ServiceID == 0)
        {
        <table id="Hide|@value" style="display: none" class="table table-sm table-hover table-collapse-seperate">
            <thead id="bootstrap-overrides" class="table-info sticky-header">
                <tr>
                    <th width="120px">@localizer["Action"]</th>
                    <th>@localizer["ServiceType"]</th>
                    <th>@localizer["CostDate"]</th>
                    <th>@localizer["Service"]</th>
                    <th>@localizer["ServiceCost"]</th>
                    <th>@localizer["Formula"]</th>
                    <th>@localizer["MatchCode"]</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <form id="AddFrm|@value" class="d-flex justify-content-center m-5" asp-area="evolDP" asp-controller="ServiceProvision" asp-action="ConfigServiceCompanyConfig"
                            asp-route-startdate="@Model.CostDate" asp-route-pageservicetypeid="@Model.Configs.First().ServiceTypeID" asp-route-pageserviceid="@Model.ServiceID"
                            asp-route-serviceompany="@JsonConvert.SerializeObject(Model.ServiceCompany)">
                    <td style="align-items:center; display:flex">
                        <img onclick="CancelRow('@value')" type="image" style="background:none; width:25px;height:25px;" src="~/images/cancel.png" title="@localizer["Cancel"]" />
                        <input onclick="return true" type="image" value="@localizer["SubmitChange"]" style="background:none; width:25px;height:25px;" name="Submit" src="~/images/Ok.png" />
                    </td>
                    <td>@serviceTypeDesc</td>
                    <td><input style="display: none" id="ServiceCompanyID" name="ServiceCompanyID" type="text" value="@Model.ServiceCompany.ID" />
                        <input id="CostDate" name="CostDate" type="date" value="@startDateDesc" />
                    </td>
                    <td>
                        <select id="ServiceID" name="ServiceID">
                                @foreach (ServiceElement s in servicesNotInList)
                                {
                                <option value="@s.ServiceID">@s.ServiceDesc</option>
                                }
                        </select>
                    </td>
                    <td><input type="number" min="0" max="1000000" step="0.01" id="ServiceCost" name="ServiceCost" value="0" /></td>
                    <td><input type="text" id="Formula" name="Formula" maxlength="1000" value="" /></td>
                    <td></td>
                    </form>
                </tr>
            </tbody>
        </table>
        }
        level0++;
        nameValue = "level0|" + level0.ToString();
        idValue = "arrow" + nameValue;
        if (Model.ServiceID ==  0)
        {
        <div id ="TitlePage">
            <h3>@startDateDesc
                <a class="bx bxs-chevron-down" href="javascript:showDetail('@nameValue')" id="@idValue"></a>
            </h3>
        </div>
        }
        <table id="@nameValue" style="@startDisplay" class="table table-sm table-hover table-collapse-seperate">
        <thead id="bootstrap-overrides" class="table-info sticky-header">
            <tr>
                @if(AddServiceCompany)
                {
                <th width="120px"></th>
                }
                <th>@localizer["CostDate"]</th>
                <th>@localizer["Service"]</th>
                <th>@localizer["ServiceCost"]</th>
                <th>@localizer["Formula"]</th>
                <th>@localizer["MatchCode"]</th>
            </tr>
        </thead>
        <tbody  id="bootstrap-overrides">
        @foreach (var service in Model.Configs)
        {   
            value = service.CostDate.ToString() + "|" + service.ServiceID.ToString();
            <tr id="Show|@value">
                @if (AddServiceCompany)
                {
                    <td width="120px">
                        <img onclick="EditRow('@value')" style="background:none; width:25px;height:25px;" src="~/images/edit.png" title="@localizer["ChangeServiceCompanyConfig"]"/>
                    </td>
                }
                <td>@startDateDesc</td>
                <td>@service.ServiceDesc</td>
                <td>@service.ServiceCost</td>
                <td>@service.Formula</td>
                <td>@service.MatchCode</td>
            </tr>
            @if (AddServiceCompany)
            {
                <tr id="Hide|@value" style="display: none">
                  <form id="AddFrm|@value" class="d-flex justify-content-center m-5" asp-area="evolDP" asp-controller="ServiceProvision" asp-action="ChangeServiceCompanyConfig"
                  asp-route-startdate="@Model.CostDate" asp-route-pageservicetypeid="@Model.Configs.First().ServiceTypeID" asp-route-pageserviceid="@Model.ServiceID"
                      asp-route-serviceompany="@JsonConvert.SerializeObject(Model.ServiceCompany)">
                    <td style="align-items:center; display:flex">
                        <img onclick="CancelRow('@value')" type="image" style="background:none; width:25px;height:25px;" src="~/images/cancel.png" title="@localizer["Cancel"]" />
                        <input onclick="return true" type="image" value="@localizer["SubmitChange"]" style="background:none; width:25px;height:25px;" name="Submit" src="~/images/Ok.png" />
                    </td>
                    <td>
                            @startDateDesc
                        <input style="display: none" id="ServiceCompanyID" name="ServiceCompanyID" type="text" value="@service.ServiceCompanyID" />
                        <input style="display: none" id="CostDate" name="CostDate" type="text" value="@cDate" />
                   </td>
                    <td>
                            @service.ServiceDesc
                        <input style="display: none" id="ServiceID" name="ServiceID" type="text" value="@service.ServiceID" />
                    </td>
                    @{
                        doubleStr = service.ServiceCost.ToString("F2");
                        if (decimalSeparator == ",")
                            doubleStr = doubleStr.Replace(",", ".");
                    }
                    <td><input type="number" min="0" max="1000000" step="0.01" id="ServiceCost" name="ServiceCost" value="@doubleStr" /></td>
                    <td><input type="text" id="Formula" name="Formula" maxlength="1000" value="@service.Formula" /></td>
                    <td>@service.MatchCode</td>
                    </form>
                </tr>
            }
        }
        </tbody>
    </table>
    }
    }
}
@section Scripts
    {
    <script type="text/javascript">
        function RegistModeChange() {
            var checkbox = document.getElementById("RegistMode");
            chkElements = document.querySelectorAll('input[id^="checkedDRFlag"]');
            chkElements.forEach(tElement => {
                tElement.checked = checkbox.checked;
            });
        }
        function CancelRow(value) {
            eShide('Hide|' + value);
            eSshow('Show|' + value);
            var obj = document.getElementById("AddFrm|" + value);
            obj.disabled = true;
            return false;
        }
        function EditRow(value) {
            eShide('Show|' + value);
            eSshow('Hide|' + value);
            var obj = document.getElementById("AddFrm|" + value);
            obj.disabled = false;

            let str = 'Hide|' + value;
            trElements = document.querySelectorAll('tr[id^="Hide|"]');
            trElements.forEach(tElement => {
                if (tElement.id != str) {
                    let val = tElement.id.substring(5);
                    CancelRow(val);
                }
            });
        }
    </script>
}