@using Shared.Models.Areas.evolDP
@using Shared.ViewModels.Areas.evolDP
@using Newtonsoft.Json;
@using Microsoft.AspNetCore.Mvc.Localization
@using System.Globalization;
@inject IViewLocalizer localizer
@inject IConfiguration configuration

@model MaterialViewModel;
@{
    string image = Model.MaterialTypeCode + "_Icon";
    CultureInfo culture = CultureInfo.CurrentCulture;
    string decimalSeparator = culture.NumberFormat.NumberDecimalSeparator;
    MaterialType mt = new MaterialType();
    mt.MaterialTypeCode = Model.MaterialTypeCode;
    MaterialElement group = Model.Group;
}
<div id="TitlePage">
    <h1><img style="background:none; width:40px;height:40px;" src="~/images/@localizer[image]" />@localizer[Model.MaterialTypeCode]</h1>
    @if (Model.MaterialTypeCode.ToUpper() == "STATION" && group.GroupID != 0)
    {
        <h2>@localizer["MaterialGroup"]: @group.GroupCode</h2>
    }
</div>
@if (Model.MaterialTypeCode.ToUpper() == "STATION")
{
    <a class='bx bx-left-arrow' style="color:rgb(90 205 239)" asp-area="evolDP" asp-controller="Materials" asp-action="MaterialGoupsList" asp-route-materialtypejson="@JsonConvert.SerializeObject(mt)">
    </a>
}
else
{
    <a class='bx bx-left-arrow' style="color:rgb(90 205 239)" asp-area="evolDP" asp-controller="Materials" asp-action="Management">
    </a>
}
@{
    string eRow;
    string value;
    string doubleStr;
    string siteURL = configuration.GetValue<string>("evolUXSiteURL");
    bool AddMaterial = false;
    bool DeleteMaterial = false;
    bool ExportMaterial = false;
    bool AddMaterialType = false;
    bool DeleteMaterialType = false;
    bool ExportMaterialType = false;
    bool AddEnvelopeRange = false;
    bool DeleteEnvelopeRange = false;
    bool ExportEnvelopeRange = false;

    if (Model.Permissions.Find(x => x == "AddMaterial") != null) { AddMaterial = true; }
    if (Model.Permissions.Find(x => x == "DeleteMaterial") != null) { DeleteMaterial = true; }
    if (Model.Permissions.Find(x => x == "ExportMaterial") != null) { ExportMaterial = true; }
    if (Model.Permissions.Find(x => x == "AddMaterialType") != null) { AddMaterialType = true; }
    if (Model.Permissions.Find(x => x == "DeleteMaterialType") != null) { DeleteMaterialType = true; }
    if (Model.Permissions.Find(x => x == "ExportMaterialType") != null) { ExportMaterialType = true; }
    if (Model.Permissions.Find(x => x == "AddEnvelopeRange") != null) { AddEnvelopeRange = true; }
    if (Model.Permissions.Find(x => x == "DeleteEnvelopeRange") != null) { DeleteEnvelopeRange = true; }
    if (Model.Permissions.Find(x => x == "ExportEnvelopeRange") != null) { ExportEnvelopeRange = true; }

    int MaterialTypeID = group.GroupID == 0 ? Model.MaterialTypeList.First().MaterialTypeID : group.MaterialTypeID;
    int serviceCompanyMaterialBinPosition = group.GroupID == 0 ? Model.MaterialTypeList.First().MaxMaterialPosition : Model.MaterialTypeList.Max(x => x.MaxMaterialPosition);
    if (Model.MaterialTypeCode.ToUpper() == "STATION" && group.GroupID != 0)
    {
        <table class="table table-sm table-hover table-collapse-seperate">
            <thead id="bootstrap-overrides" class="table-info sticky-header">
                <tr>
                    <th class="evol-fitcontent-column" style="text-align: center">
                    </th>
                    <th>@localizer["GroupDescription"]</th>
                    <th title="@localizer["MaterialWeight_Tip"]">@localizer["MaterialWeight"]</th>
                    <th title="@localizer["FullFillSheets_Tip"]">@localizer["FullFillSheets"]</th>
                    <th title="@localizer["FullFillMaterialCode_Tip"]">@localizer["FullFillMaterialCode"]</th>
                    <th title="@localizer["Provider_Tip"]">@localizer["Provider"]</th>
                </tr>
            </thead>
            <tbody id="bootstrap-overrides">
                <tr id="Show|Group">
                    <td class="evol-fitcontent-column">
                        @if (AddMaterialType)
                        {
                            <img onclick="EditRow('Group')" class="evol-image" src="~/images/edit.png" title="@localizer["ChangeMaterial"]" />
                        }
                        <a asp-area="evolDP" asp-controller="Materials" asp-action="MaterialGroupCost" asp-route-materialgroupJSON="@JsonConvert.SerializeObject(group)" asp-route-materialTypeCode="@Model.MaterialTypeCode">
                            <img style="background:none; width:25px;height:25px;" src="~/images/cost.png" title="@localizer["MaterialCost"]" />
                        </a>
                    </td>
                    <td>@group.GroupDescription</td>
                    <td>@group.MaterialWeight</td>
                    <td>@group.FullFillSheets</td>
                    @if (string.IsNullOrEmpty(group.FullFillMaterialCode))
                    {
                        value = localizer["EmptyFullFillMaterialCode"].Value;
                    }
                    else
                    {
                        value = group.FullFillMaterialCode;
                    }
                    <td>@value</td>
                    <td>
                        @{
                            value = group.CostList.Count() > 0 ? Model.Companies.FirstOrDefault(x => x.ID == group.CostList.First()?.ProviderCompanyID)?.CompanyName : "";
                        }
                        @value
                    </td>
                </tr>
                <tr id="Hide|Group" style="display: none">
                    <form id="AddFrm|Group" class="d-flex justify-content-center m-5" asp-area="evolDP" asp-controller="Materials" asp-action="ChangeMaterialGroup" asp-route-materialtypecode="@Model.MaterialTypeCode">
                        <td style="align-items:center; display:flex">
                            <img onclick="CancelRow('Group')" type="image" class="evol-image" src="~/images/cancel.png" title="@localizer["Cancel"]" />
                            <input onclick="return true" type="image" value="@localizer["SubmitChange"]" class="evol-image" name="Submit" src="~/images/Ok.png" />
                        <input style="display: none" id=GroupID name=GroupID type="number" value="@group.GroupID" />
                        <input style="display: none" id=GroupCode name=GroupCode type="text" maxlength="20" style="width: 100%" value="@group.GroupCode" />
                        <input style="display: none" id=MaterialTypeID name=MaterialTypeID type="number" value="@group.MaterialTypeID" />
                        </td>
                        <td><input id=GroupDescription name=GroupDescription type="text" maxlength="50" style="width: 100%" value="@group.GroupDescription" /></td>
                        @{
                            doubleStr = group.MaterialWeight.ToString("F2");
                            if (decimalSeparator == ",")
                                doubleStr = doubleStr.Replace(",", ".");
                        }
                        <td><input id=MaterialWeight name=MaterialWeight type="number" maxlength="9999999" step="0.01" style="width: 100%" value="@doubleStr" /></td>
                        <td><input id=FullFillSheets name=FullFillSheets type="number" maxlength="9999999" style="width: 100%" value="@group.FullFillSheets"/></td>
                        <td>
                            <select id=FullFillMaterialCode name=FullFillMaterialCode style="width:100%">
                                @if (!string.IsNullOrEmpty(group.FullFillMaterialCode))
                                {
                                    <option value="@group.FullFillMaterialCode">@group.FullFillMaterialCode - @Model.FullfillMaterialCodes.FirstOrDefault(x => x.FullFillMaterialCode == group.FullFillMaterialCode).Description</option>
                                    <option value="">@localizer["EmptyFullFillMaterialCode"]</option>
                                }
                                else
                                {
                                <option value="">@localizer["EmptyFullFillMaterialCode"]</option>
                                }
                                @foreach (var f in Model.FullfillMaterialCodes.Where(x => x.FullFillMaterialCode != group.FullFillMaterialCode))
                                {
                                   <option value="@f.FullFillMaterialCode">@f.FullFillMaterialCode - @f.Description</option>
                                }
                            </select>
                        </td>
                        <td>
                            @{
                                value = group.CostList.Count() > 0 ? Model.Companies.FirstOrDefault(x => x.ID == group.CostList.First()?.ProviderCompanyID)?.CompanyName : "";
                            }
                            @value
                        </td>
                    </form>
                </tr>
            </tbody>
        </table>
    }
    <br/>

    <table id="Hide|Material" style="display: none">
        <form id="AddFrm|Material" class="d-flex justify-content-center m-5" asp-area="evolDP" asp-controller="Materials" asp-action="ChangeMaterial" asp-route-materialtypecode="@Model.MaterialTypeCode">
        <thead>
            <tr>
                <th></th>
                <th><h4 colspan="2" style="text-align:center;color: var(--evol-grey);">@localizer["AddMaterial"]</h4></th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td style="align-items:center; border: none;background-color: transparent;vertical-align:middle">
                    <div style="align-items:center; display:flex">
                        <img onclick="CancelRow('Material')" style="height:30px;width:30px" type="image" class="evol-image" src="~/images/cancel.png" title="@localizer["Cancel"]" />
                        <input onclick="return true" style="height:30px;width:30px" type="image" value="@localizer["SubmitAdd"]" class="evol-image" name="Submit" src="~/images/Ok.png" title="@localizer["Submit"]" />
                    </div>
                </td>
                <td style="border:outset">
                    <table class="table table-sm table-collapse-seperate">
                        <tbody id="bootstrap-overrides">
                            <tr class="table-info">
                                <input style="display: none" id=GroupID name=GroupID type="number" value="@group.GroupID" />
                                <th rowspan="2" colspan="2" style="vertical-align:bottom;border: none;background-color: transparent" title="@localizer["MaterialRef_Tip"]">@localizer["MaterialRef"]</th>
                                <th rowspan="2" style="vertical-align:bottom;border: none;background-color: transparent;">@localizer["MaterialDescription"]</th>
                                <th colspan="3" style="vertical-align:bottom;border: none;background-color: transparent;text-align:center;border-bottom:groove">@localizer["ProviderCompany"]</th>
                            </tr>
                            <tr>
                                <th style="vertical-align:bottom;border: none;background-color: transparent;">@localizer["Name"]</th>
                                <th style="vertical-align:bottom;border: none;background-color: transparent;">@localizer["CostDate"]</th>
                                <th style="vertical-align:bottom;border: none;background-color: transparent;">@localizer["MaterialCost"]</th>
                            </tr>
                            <tr>
                                <td colspan="2" style="border: none;background-color: transparent;"><input id=MaterialRef name=MaterialRef type="text" maxlength="20" style="width: 100%" /></td>
                                <td style="border: none;background-color: transparent;"><input id=MaterialDescription name=MaterialDescription type="text" maxlength="50" style="width: 100%" /></td>
                                <td style="border: none;background-color: transparent;">
                                    <select id=ProviderCompanyID name=ProviderCompanyID style="width: 100%">
                                            @foreach (Company c in Model.Companies)
                                            {
                                            <option value="@c.ID">@c.CompanyName</option>
                                            }
                                    </select>
                                </td>
                                <td style="border: none;background-color: transparent;">
                                    <input id="CostDate" name="CostDate" type="date" value="@DateTime.Now.ToString("yyyy-MM-dd")" style="width: 100%" />
                                </td>
                                <td style="border: none;background-color: transparent;">
                                    <input id=MaterialCost name=MaterialCost type="number" maxlength="9999999" step="0.01" style="width: 100%" />
                                </td>
                            </tr>
                            <tr class="table-info">
                                <th colspan="3" style="vertical-align:bottom;border: none;background-color: transparent;text-align:left" title="@localizer["MaterialCode_Tip"]">@localizer["MaterialCode"]
                                    <input id=MaterialCode name=MateriaCode type="text" maxlength="20" style="text-emphasis-style:none" />
                                    @if(!Model.MaterialTypeCode.ToUpper().EndsWith("PAPER"))
                                    {
                                        <span style="padding-left:10px;color: var(--evol-grey);">@localizer[Model.MaterialTypeList.FirstOrDefault(x => x.MaterialTypeID == MaterialTypeID)?.MaterialTypeCode]</span>
                                    }
                                </th>
                                @if (Model.MaterialTypeCode.ToUpper() == "ENVELOPE")
                                {
                                    value = "2";
                                    <th style="vertical-align:bottom;border: none;background-color: transparent;"></th>
                                }
                                else
                                {
                                    value = "3";
                                }
                                <th colspan="@value" style="vertical-align:bottom;border: none;background-color: transparent;text-align:center;border-bottom:groove">@localizer["ServiceCompany"]</th>
                            </tr>
                            <tr class="table-info">
                                @if (Model.MaterialTypeCode.ToUpper() == "ENVELOPE")
                                {
                                    <th colspan="2" style="vertical-align:bottom;border: none;background-color: transparent;" title="@localizer["ExpeditionMinWeight_Tip"]">@localizer["ExpeditionMinWeight"]</th>
                                }
                                else
                                {
                                    <th style="vertical-align:bottom;border: none;background-color: transparent;" title="@localizer["MaterialWeight_Tip"]">@localizer["MaterialWeight"]</th>
                                    <th style="vertical-align:bottom;border: none;background-color: transparent;" title="@localizer["FullFillSheets_Tip"]">@localizer["FullFillSheets"]</th>
                                }
                                @if (Model.MaterialTypeCode.ToUpper().EndsWith("PAPER"))
                                {
                                    <th style="vertical-align:bottom;border: none;background-color: transparent;">@localizer["MaterialType"]</th>
                                }
                                else
                                {
                                    <th style="vertical-align:bottom;border: none;background-color: transparent;" title="@localizer["FullFillMaterialCode_Tip"]">@localizer["FullFillMaterialCode"]</th>
                                }
                                @if (Model.MaterialTypeCode.ToUpper() == "ENVELOPE")
                                {
                                    <th style="vertical-align:bottom;border: none;background-color: transparent;" title="@localizer["MaterialWeight_Tip"]">@localizer["MaterialWeight"]</th>
                                }
                                <th colspan="2" style="vertical-align:bottom;border: none;background-color: transparent;">@localizer["Name"]</th>
                                @if (Model.MaterialTypeCode.ToUpper() != "ENVELOPE")
                                {
                                    value = localizer[Model.MaterialTypeCode + "MaterialBinPosition"].Value;
                                    if (value == (Model.MaterialTypeCode + "MaterialBinPosition"))
                                        value = localizer["MaterialBinPosition"].Value;
                                    <th style="vertical-align:bottom;border: none;background-color: transparent;" title="@localizer["MaterialBinPosition_Tip"]">@value</th>
                                }
                            </tr>
                            <tr>
                                @if (Model.MaterialTypeCode.ToUpper() == "ENVELOPE")
                                {
                                    <td colspan="2" style="border: none;background-color: transparent;"><input id=ExpeditionMinWeight name=ExpeditionMinWeight type="number" maxlength="9999999" step="0.01" style="width: 100%" /></td>
                                }
                                else
                                {
                                    <td style="border: none;background-color: transparent;"><input id=MaterialWeight name=MaterialWeight type="number" maxlength="9999999" step="0.01" style="width: 100%" /></td>
                                    <td style="border: none;background-color: transparent;"><input id=FullFillSheets name=FullFillSheets type="number" maxlength="9999999" style="width: 100%" /></td>
                                }
                                <td style="border: none;background-color: transparent;">
                                @if (Model.MaterialTypeCode.ToUpper().EndsWith("PAPER"))
                                {
                                    if (Model.MaterialTypeList.Count() > 1 && group.GroupID == 0)
                                    {
                                        <select id=MaterialTypeID name=MaterialTypeID>
                                            @foreach (MaterialType mt1 in Model.MaterialTypeList)
                                            {
                                            <option value="@mt1.MaterialTypeID">@localizer[mt1.MaterialTypeCode]</option>
                                            }
                                        </select>
                                    }
                                    else
                                    {
                                        <input style="display: none" id=MaterialTypeID name=MaterialTypeID type="number" value="@MaterialTypeID" />
                                        @localizer[Model.MaterialTypeList.FirstOrDefault(x => x.MaterialTypeID == MaterialTypeID)?.MaterialTypeCode]
                                    }
                                }
                                else
                                {
                                   <input style="display: none" id=MaterialTypeID name=MaterialTypeID type="number" value="@MaterialTypeID" />
                                   <select id=FullFillMaterialCode name=FullFillMaterialCode>
                                        <option value="">@localizer["EmptyFullFillMaterialCode"]</option>
                                            @foreach (var f in Model.FullfillMaterialCodes)
                                            {
                                            <option value="@f.FullFillMaterialCode">@f.FullFillMaterialCode - @f.Description</option>
                                            }
                                    </select>
                                }
                                </td>
                                @if (Model.MaterialTypeCode.ToUpper() == "ENVELOPE")
                                {
                                    <td style="border: none;background-color: transparent;"><input id=MaterialWeight name=MaterialWeight type="number" maxlength="9999999" step="0.01" style="width: 100%" /></td>
                                }
                                <td colspan="2" style="border: none;background-color: transparent;">
                                    <select id=ServiceCompanyID name=ServiceCompanyID style="width: 100%">
                                            @foreach (Company c in Model.ServiceCompanies)
                                            {
                                            <option value="@c.ID">@c.CompanyName</option>
                                            }
                                    </select>
                                </td>
                                @if (Model.MaterialTypeCode.ToUpper() != "ENVELOPE")
                                {
                                <td style="border: none;background-color: transparent;">
                                    <table id="groupCost" class="evol-checkbox-table">
                                        <thead>
                                            <tr>
                                                    @for (int i = 0; i < serviceCompanyMaterialBinPosition; i++)
                                                    {
                                                    <td style="border: none;background-color: transparent;text-align:center">@(i + 1)</td>
                                                    }
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr>
                                                    @for (int i = 0; i < serviceCompanyMaterialBinPosition; i++)
                                                    {
                                                    <td style="border: none;background-color: transparent;text-align:center"><input id="MaterialBinPosition" name="MaterialBinPosition" type="checkbox" value="@Math.Pow(2, i)" checked /></td>
                                                    }
                                            </tr>
                                        </tbody>
                                    </table>
                                </td>
                                }
                            </tr>
                        </tbody>
                    </table>
                </td>
            </tr>
            <tr><td><br /></td></tr>
        </tbody>
    </form>
    </table>

    if (Model.MaterialList.Count() == 0)
    {
        @if (AddMaterial)
        {
            <div id="Show|">
                <img onclick="EditRow('Material')" style="background:none; width:30px;height:30px;" src="~/images/add.png" title="@localizer["AddMaterial"]" /> 
                @localizer["AddMaterial"]
            </div>
        }
    }
    else
    {
        <table class="table table-sm table-hover table-collapse-seperate">
            <thead id="bootstrap-overrides" class="table-info sticky-header">
                <tr>
                    <th class="evol-fitcontent-column" style="text-align: center">
                        @if (AddMaterial)
                        {
                            <img onclick="EditRow('Material')" style="background:none; width:30px;height:30px;" src="~/images/add.png" title="@localizer["AddMaterial"]" />
                        }
                    </th>
                    <th>@localizer["MaterialRef"]</th>
                    <th>@localizer["MaterialDescription"]</th>
                    <th>@localizer["MaterialCode"]</th>
                    <th>@localizer["MaterialType"]</th>
                    <th title="@localizer["MaterialWeight_Tip"]">@localizer["MaterialWeight"]</th>
                    @if (Model.MaterialTypeCode.ToUpper() != "ENVELOPE")
                    {
                        <th title="@localizer["FullFillSheets_Tip"]">@localizer["FullFillSheets"]</th>
                        <th title="@localizer["FullFillMaterialCode_Tip"]">@localizer["FullFillMaterialCode"]</th>
                    }
                    else
                    {
                        <th>@localizer["FullFillMaterialCode"]</th>
                        <th title="@localizer["ExpeditionMinWeight_Tip"]">@localizer["ExpeditionMinWeight"]</th>
                    }
                </tr>
            </thead>
            <tbody id="bootstrap-overrides">
                @foreach (MaterialElement m in Model.MaterialList)
                {
                    eRow = m.MaterialID.ToString();
                    <tr id="Show|@eRow">
                        <td class="evol-fitcontent-column">
                            @if (AddMaterial)
                            {
                                <img onclick="EditRow('@eRow')" class="evol-image" src="~/images/edit.png" title="@localizer["ChangeMaterial"]" />
                            }
                            <a asp-area="evolDP" asp-controller="Materials" asp-action="MaterialCost" asp-route-materialJSON="@JsonConvert.SerializeObject(m)" asp-route-materialTypeCode="@Model.MaterialTypeCode">
                                <img style="background:none; width:25px;height:25px;" src="~/images/cost.png" title="@localizer["MaterialCost"]" />
                            </a>
                        </td>
                        <td>@m.MaterialRef</td>
                        <td>@m.MaterialDescription</td>
                        <td>@m.MaterialCode</td>
                        <td>@localizer[Model.MaterialTypeList.FirstOrDefault(x => x.MaterialTypeID == m.MaterialTypeID).MaterialTypeCode]</td>
                        <td>@m.MaterialWeight</td>
                        @if (Model.MaterialTypeCode.ToUpper() != "ENVELOPE")
                        {
                            <td>@m.FullFillSheets</td>
                        }
                        @if (string.IsNullOrEmpty(m.FullFillMaterialCode))
                        {
                            value = localizer["EmptyFullFillMaterialCode"].Value;
                        }
                        else
                        {
                            value = m.FullFillMaterialCode;
                        }
                        <td>@value</td>
                        @if (Model.MaterialTypeCode.ToUpper() == "ENVELOPE")
                        {
                            <td>@m.ExpeditionMinWeight</td>
                        }
                    </tr>
                    <tr id="Hide|@eRow" style="display: none">
                        <form id="AddFrm|@eRow" class="d-flex justify-content-center m-5" asp-area="evolDP" asp-controller="Materials" asp-action="ChangeMaterial" asp-route-materialtypecode="@Model.MaterialTypeCode">
                            <td style="align-items:center; display:flex">
                                <img onclick="CancelRow('@eRow')" type="image" class="evol-image" src="~/images/cancel.png" title="@localizer["Cancel"]" />
                                <input onclick="return true" type="image" value="@localizer["SubmitChange"]" class="evol-image" name="Submit" src="~/images/Ok.png" />
                                <input style="display: none" id=MaterialID name=MaterialID type="number" value="@m.MaterialID" />
                                <input style="display: none" id=GroupID name=GroupID type="number" value="@group.GroupID" />
                            </td>
                            <td><input disable id=MaterialRef name=MaterialRef type="text" maxlength="20" style="width: 100%" value="@m.MaterialRef"/></td>
                            <td><input id=MaterialDescription name=MaterialDescription type="text" maxlength="50" style="width: 100%" value="@m.MaterialDescription" /></td>
                            <td><input id=MaterialCode name=MaterialCode type="text" maxlength="20" style="width: 100%" value="@m.MaterialCode"/></td>
                            <td>
                            @if (Model.MaterialTypeList.Count() > 1 && group.GroupID == 0)
                            {
                                    <select id=MaterialTypeID name=MaterialTypeID>
                                        <option value="@m.MaterialTypeID">@localizer[Model.MaterialTypeList.FirstOrDefault(x => x.MaterialTypeID == m.MaterialTypeID).MaterialTypeCode]</option>
                                        @foreach (MaterialType mt2 in Model.MaterialTypeList.Where(x => x.MaterialTypeID != m.MaterialTypeID))
                                        {
                                            <option value="@mt2.MaterialTypeID">@localizer[mt2.MaterialTypeCode]</option>
                                        }
                                    </select>
                                
                            }
                            else
                            {
                                <input style="display: none" id=MaterialTypeID name=MaterialTypeID type="number" value="@MaterialTypeID" />
                                @localizer[Model.MaterialTypeList.FirstOrDefault(x => x.MaterialTypeID == MaterialTypeID).MaterialTypeCode]
                            }
                            </td>
                            @{
                                doubleStr = m.MaterialWeight.ToString("F2");
                                if (decimalSeparator == ",")
                                    doubleStr = doubleStr.Replace(",", ".");
                            }
                            <td><input id=MaterialWeight name=MaterialWeight type="number" maxlength="9999999" step="0.01" style="width: 100%" value="@doubleStr" /></td>
                            @if (Model.MaterialTypeCode.ToUpper() != "ENVELOPE")
                            {
                                <td><input id=FullFillSheets name=FullFillSheets type="number" maxlength="9999999" style="width: 100%" value="@m.FullFillSheets"/></td>
                            }
                            <td>
                                <select id=FullFillMaterialCode name=FullFillMaterialCode>
                                    @if (!string.IsNullOrEmpty(m.FullFillMaterialCode))
                                    {
                                        <option value="@m.FullFillMaterialCode">@m.FullFillMaterialCode - @Model.FullfillMaterialCodes.FirstOrDefault(x => x.FullFillMaterialCode == m.FullFillMaterialCode).Description</option>
                                        <option value="">@localizer["EmptyFullFillMaterialCode"]</option>
                                    }
                                    else
                                    {
                                        <option value="">@localizer["EmptyFullFillMaterialCode"]</option>
                                    }
                                    @foreach (var f in Model.FullfillMaterialCodes.Where(x => x.FullFillMaterialCode != m.FullFillMaterialCode))
                                    {
                                        <option value="@f.FullFillMaterialCode">@f.FullFillMaterialCode - @f.Description</option>
                                    }
                                </select>
                            </td>
                            @if (Model.MaterialTypeCode.ToUpper() == "ENVELOPE")
                            {
                                doubleStr = m.ExpeditionMinWeight.ToString("F2");
                                if (decimalSeparator == ",")
                                    doubleStr = doubleStr.Replace(",", ".");

                                <td><input id=ExpeditionMinWeight name=ExpeditionMinWeight type="number" maxlength="9999999" step="0.01" style="width: 100%" value="@doubleStr" /></td>
                            }
                        </form>
                    </tr>
                }
            </tbody>
    </table>
    }
}
@section Scripts
    {
    <script type="text/javascript">
        function CancelRow(value) {
            eShide('Hide|' + value);
            eSshow('Show|' + value);

            var obj = document.getElementById("AddFrm|" + value);
            obj.disabled = true;
            return false;
        }
        function EditRow(value) {
            eShide('Show|' + value);
            eSshow('Hide|' + value);
            var obj = document.getElementById("AddFrm|" + value);
            obj.disabled = false;

            let str = 'Hide|' + value;
            trElements = document.querySelectorAll('tr[id^="Hide|"]');
            trElements.forEach(tElement => {
                if (tElement.id != str) {
                    let val = tElement.id.substring(5);
                    CancelRow(val);
                }
            });
        }
    </script>
}