@using Shared.ViewModels.Areas.evolDP
@using Shared.Models.Areas.evolDP
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer localizer
@model ProjectListViewModel
@inject IConfiguration configuration
@{
    string siteURL = configuration.GetValue<string>("evolUXSiteURL");
    bool AddConstantParameter = false;
    bool DeleteConstantParameter = false;

    if (Model.Permissions.Find(x => x == "AddConstantParameter") != null) { AddConstantParameter = true; }
    if (Model.Permissions.Find(x => x == "DeleteConstantParameter") != null) { DeleteConstantParameter = true; }
}
@section Scripts
{
    <script type="text/javascript">
        function refreshPage() {
            window.location.reload();
        };
        function MessageBox(msg) {
            alert(msg);
        }
    </script>
}

<div class="d-flex justify-content-center" >
    <div class="spinner-border" role="status" id="myLoader" style="display:none">
      <span class="sr-only">Loading...</span>
    </div>
</div>

@if (Model == null)
{
    <div id="ResultPage">
        <h3 class="display-4 text-center">@localizer["NoModelData"]</h3>
    </div>
}
else
{
    <div id="TitlePage">
        <h1>@localizer["Projects"] @ViewBag.BusinessDescription</h1>
    </div>
    @if (ViewBag.hasMultipleCompanyBusiness)
    {
    <div>
        <a class='bx bx-left-arrow' style="color:rgb(90 205 239)" asp-area="evolDP" asp-controller="Generic" asp-action="Projects">
        </a>
    </div>
    }
    @if (Model.Projects.Count() == 0)
    {
        <h4 class="display-4 text-center">@localizer["EmptyResult"]</h4>
    }
    else
    {
        string startStyle = "none";
        string Level0Name = "level";
        string Level1Name = "detail";

        int count = 0;
        int level = 0;
        string idValue = "arrow" + count.ToString();
        string nameValue = "";
        string cValue = "";
        @foreach (ProjectElement b in Model.Projects)
        {
        <table class="table table-bordered table-sm table-striped">
            @{
                count++;
                nameValue = Level0Name + count.ToString();
                idValue = "arrow" + nameValue;
            }
            <thead>
                @if (ViewBag.hasMultipleCompanyBusiness)
                {
                    <tr>
                        <th class ="evol-fitcontent-column">
                            @if (ViewBag.OnlyOneSelected)
                            {
                                startStyle = "";
                                <a class="evol-arrow bx bxs-chevron-up" href="javascript:hideDetail('@nameValue')" id="@idValue"> </a>
                            }
                            else
                            {
                                <a class="evol-arrow bx bxs-chevron-down" href="javascript:showDetail('@nameValue')" id="@idValue"></a>
                            }
                        </th>
                        <th colspan="5">
                            @b.BusinessDescription [@b.Type]
                        </th>
                    </tr>
                }
                else
                {
                    <tr>
                        <th><a class="evol-arrow bx bxs-chevron-up" href="javascript:hideDetail('@nameValue')" id="@idValue"></a></th>
                        <th colspan="5">@b.Type</th>
                    </tr>
                }
            </thead>
            <tbody id="@nameValue" style="display: @startStyle">
                @foreach (Project p in b.ProjectList)
                {
                    level++;
                    nameValue = Level1Name + level.ToString();
                    idValue = "arrow" + nameValue;
                    <tr>
                        <th><a class="evol-arrow bx bxs-chevrons-down" href="javascript:showDetails('@nameValue')" id="@idValue"></th>
                        <th>@localizer["ProjectCode"]: @p.ProjectCode</th>
                    </tr>
                    <tr id="@nameValue" style="display: none">
                        <td colspan="2">
                            <table class="table table-bordered table-sm table-striped">
                                <thead>
                                    <th>@localizer["Version"]</th>
                                    <th>@localizer["StartTimeStamp"]</th>
                                    <th>@localizer["Description"]</th>
                                </thead>
                                <tbody>
                                @if (AddConstantParameter)
                                {
                                    <tr id="Hide|" style="display: none">
                                        <form id="AddFrm|" class="d-flex justify-content-center m-5" asp-area="evolDP" asp-controller="Generic" asp-action="ConfigProject">
                                        <td style="align-items:center; display:flex">
                                            <img onclick="CancelRow('')" type="image" class="evol-image" src="~/images/cancel.png" title="@localizer["Cancel"]" />
                                            <input onclick="return true" type="image" value="@localizer["SubmitChange"]" class="evol-image" name="Submit" src="~/images/Ok.png" />
                                        </td>
                                        <td></td>
                                        <td><input id=StartDateTime name=StartDateTime type="datetime" style="width: 100%"/></td>
                                        <td><input id=ProjectDescription name=ProjectDescription type="text" maxlength="256" style="width: 100%" /></td>
                                        </form>
                                    </tr>
                                }                                
                                @foreach (VersionElement v in p.VersionList)
                                {
                                    <tr>
                                        <td>@string.Format("{0:00}_{1:00}_{2:00}_{3:00}",v.Major, v.Minor, v.Revision, v.Patch)</td>
                                        @{
                                            idValue = string.Format("{0:00000000}{1:000000}", v.StartDate, v.StartTime);
                                                    nameValue = string.Format("{3:00}/{4:00}/{5:0000} {0:00}:{1:00}:{2:00}", Int32.Parse(idValue.Substring(8, 2)), Int32.Parse(idValue.Substring(10, 2)), Int32.Parse(idValue.Substring(12, 2)), Int32.Parse(idValue.Substring(6, 2)), Int32.Parse(idValue.Substring(4, 2)), Int32.Parse(idValue.Substring(0, 4)));
                                        }
                                        <td>@nameValue</td>
                                        <td>@v.Description</td>
                                    </tr>
                                }
                                </tbody>
                            </table>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        }
    }
}


