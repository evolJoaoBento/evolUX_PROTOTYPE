@using Shared.Models.Areas.evolDP
@using Shared.ViewModels.Areas.evolDP
@using Newtonsoft.Json;
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer localizer
@inject IConfiguration configuration

@model ExpeditionTypeViewModel;
@{
    string siteURL = configuration.GetValue<string>("evolUXSiteURL");
    bool AddExpCompany = false;
    bool AddExpeditionContract = false;
    bool DeleteExpeditionContract = false;
    bool ExportExpeditionContract = false;
    bool AddExpeditionType = false;
    bool AddExpRegistRange = false;
    bool ExportExpRegistRange = false;

    if (Model.Permissions.Find(x => x == "AddExpeditionType") != null) { AddExpeditionType = true; }
    if (Model.Permissions.Find(x => x == "AddExpCompany") != null) { AddExpCompany = true; }
    if (Model.Permissions.Find(x => x == "AddExpeditionContract") != null) { AddExpeditionContract = true; }
    if (Model.Permissions.Find(x => x == "DeleteExpeditionContract") != null) { DeleteExpeditionContract = true; }
    if (Model.Permissions.Find(x => x == "ExportExpeditionContract") != null) { ExportExpeditionContract = true; }
    if (Model.Permissions.Find(x => x == "AddExpRegistRange") != null) { AddExpRegistRange = true; }
    if (Model.Permissions.Find(x => x == "ExportExpRegistRange") != null) { ExportExpRegistRange = true; }
   
}

@if (Model == null || Model.ExpCompanies == null || Model.ExpCompanies.Count() == 0)
{
    <tr><td colspan="5" class="text-center">@localizer["NoModelData"]</td></tr>
}
else
{
    string value;
    string Level0Name = "level";

    int level = 0;
    string idValue = "arrow" + level.ToString();
    string nameValue = "";

    <div id="TitlePage">
        <h1>@localizer["ExpCompanyList"]</h1>
    </div>
    <table class="table table-sm table-hover table-collapse-seperate">
        <thead id="bootstrap-overrides" class="table-info sticky-header">
           <tr>
                <th>@localizer["Action"]</th>
                <th>@localizer["ID"]</th>
                <th>@localizer["CompanyName"]</th>
                <th>@localizer["CompanyCode"]</th>
                <th>@localizer["CompanyAddress"]</th>
                <th>@localizer["CompanyPostalCodeDesc"]</th>
                <th>@localizer["CompanyCountry"]</th>
            </tr>
        </thead>
        <tbody id="bootstrap-overrides">
            @foreach (var expCompany in Model.ExpCompanies)
            {
                level++;
                nameValue = Level0Name + level.ToString();
                idValue = "arrow" + nameValue;
                value = expCompany.ID.ToString();
                <tr>
                    <td>
                        @if (AddExpCompany)
                        {
                            ExpeditionTypeViewModel newModel = new ExpeditionTypeViewModel();
                            List<ExpeditionTypeElement> typeList = new List<ExpeditionTypeElement>();
                            newModel.ExpCompanies = new List<Company>();
                            newModel.ExpCompanies.ToList().Add(expCompany);

                            foreach (ExpeditionTypeElement exp in Model.Types)
                            {
                                ExpeditionTypeElement newExp = new ExpeditionTypeElement();
                                newExp.ExpeditionType = exp.ExpeditionType;
                                newExp.Description = exp.Description;
                                newExp.Priority = exp.Priority;
                                newExp.ExpCompanyTypesList = exp.ExpCompanyTypesList.Where(x => x.ExpCompanyID == expCompany.ID);
                                typeList.Add(newExp);
                            }
                            newModel.Types = typeList;

                            <a asp-area="evolDP" asp-controller="Expedition" asp-action="ChangeExpCompany" asp-route-expeditiontypeviewJson="@JsonConvert.SerializeObject(Model)">
                                <img style="background:none; width:25px;height:25px;" src="~/images/edit.png" title="@localizer["ChangeExpCompany"]: @expCompany.CompanyName" />
                            </a>
                        }
                        <a asp-area="evolDP" asp-controller="Expedition" asp-action="ExpCompanyContracts" asp-route-expCompanyid="@expCompany.ID">
                            <img style="background:none; width:25px;height:25px;" src="~/images/contract.png" title="@localizer["ExpCompanyContracts"]: @expCompany.CompanyName" />
                        </a>

                        <a asp-area="evolDP" asp-controller="Expedition" asp-action="ExpRegistRange" asp-route-expCompanyid="@expCompany.ID">
                            <img style="background:none; width:25px;height:25px;" src="~/images/RegistredMail.png" title="@localizer["ExpRegistRange"]: @expCompany.CompanyName" />
                        </a>
                    </td>
                    <td>@expCompany.ID</td>
                    <td>@expCompany.CompanyName</td>
                    <td>@expCompany.CompanyCode</td>
                    <td>@expCompany.CompanyAddress</td>
                    <td>@expCompany.CompanyPostalCode   @expCompany.CompanyPostalCodeDescription</td>
                    <td>@expCompany.CompanyCountry</td>
                </tr>
            }
        </tbody>
    </table>
}
@section Scripts
    {
    <script type="text/javascript">
        function RegistModeChange()
        {
            var checkbox = document.getElementById("RegistMode");
            chkElements = document.querySelectorAll('input[id^="checkedDRFlag"]');
            chkElements.forEach(tElement => {
                tElement.checked = checkbox.checked;
            });
        }
        function CancelRow(value) {
            eShide('Hide|' + value);
            eSshow('Show|' + value);
            var obj = document.getElementById("AddFrm|" + value);
            obj.disabled = true;
            return false;
        }
        function EditRow(value) {
            eShide('Show|' + value);
            eSshow('Hide|' + value);
            var obj = document.getElementById("AddFrm|" + value);
            obj.disabled = false;

            let str = 'Hide|' + value;
            trElements = document.querySelectorAll('tr[id^="Hide|"]');
            trElements.forEach(tElement => {
                if (tElement.id != str) {
                    let val = tElement.id.substring(5);
                    CancelRow(val);
                }
            });
        }
    </script>
}