@using Shared.Models.Areas.evolDP
@using Shared.ViewModels.Areas.evolDP
@using Newtonsoft.Json;
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer localizer
@inject IConfiguration configuration

@model ExpeditionTypeViewModel;
@{
    string siteURL = configuration.GetValue<string>("evolUXSiteURL");
    bool AddExpCompany = false;
    bool AddExpeditionContract = false;
    bool DeleteExpeditionContract = false;
    bool ExportExpeditionContract = false;
    bool AddExpeditionType = false;
    bool AddExpRegistRange = false;
    bool ExportExpRegistRange = false;

    if (Model.Permissions.Find(x => x == "AddExpeditionType") != null) { AddExpeditionType = true; }
    if (Model.Permissions.Find(x => x == "AddExpCompany") != null) { AddExpCompany = true; }
    if (Model.Permissions.Find(x => x == "AddExpeditionContract") != null) { AddExpeditionContract = true; }
    if (Model.Permissions.Find(x => x == "DeleteExpeditionContract") != null) { DeleteExpeditionContract = true; }
    if (Model.Permissions.Find(x => x == "ExportExpeditionContract") != null) { ExportExpeditionContract = true; }
    if (Model.Permissions.Find(x => x == "AddExpRegistRange") != null) { AddExpRegistRange = true; }
    if (Model.Permissions.Find(x => x == "ExportExpRegistRange") != null) { ExportExpRegistRange = true; }
}
@if (Model == null || Model.ExpCompanies == null || Model.ExpCompanies.Count() == 0)
{
    <tr><td colspan="5" class="text-center">@localizer["NoModelData"]</td></tr>
}
else
{
    List<ExpeditionTypeElement> expCompanyTypes = new List<ExpeditionTypeElement>();
    List<ExpeditionTypeElement> expCompanyTypesNotIn = new List<ExpeditionTypeElement>();
    Company expCompany = Model.ExpCompanies.First();
    bool ExistsExpeditionRegist = false;
    foreach (ExpeditionTypeElement exp in Model.Types)
    {
        ExpeditionTypeElement newExp = new ExpeditionTypeElement();
        newExp.ExpeditionType = exp.ExpeditionType;
        newExp.Description = exp.Description;
        newExp.Priority = exp.Priority;
        newExp.ExpCompanyTypesList = exp.ExpCompanyTypesList.Where(x => x.ExpCompanyID == expCompany.ID);
        if (newExp.ExpCompanyTypesList.Count() > 0)
        {
            expCompanyTypes.Add(newExp); 
            if (newExp.ExpCompanyTypesList.Where(x => x.RegistMode).Count() > 0)
                ExistsExpeditionRegist = true;
        }
        else
            expCompanyTypesNotIn.Add(newExp);
    }

    string value;
    int level = 0;
    string idValue = "arrow" + level.ToString();
    string nameValue = "";

    <div id="TitlePage">
        <h1>@localizer["ExpCompany"]</h1>
    </div>
    <div>
        <a class='bx bx-left-arrow' style="color:rgb(90 205 239)" asp-area="evolDP" asp-controller="Expedition" asp-action="Companies">
        </a>
        <a asp-area="evolDP" asp-controller="Expedition" asp-action="ExpCompanyConfig" asp-route-expcompanyJson="@JsonConvert.SerializeObject(expCompany)">
            <img style="background:none; width:50px;height:50px;" src="~/images/config.png" title="@localizer["ExpCompanyConfig"]" />
        </a>
        <a asp-area="evolDP" asp-controller="Expedition" asp-action="ExpCompanyContracts" asp-route-expcompanyJson="@JsonConvert.SerializeObject(expCompany)">
            <img style="background:none; width:50px;height:50px;" src="~/images/contract2.png" title="@localizer["ExpCompanyContracts"]" />
        </a>
        if (ExistsExpeditionRegist)
        {
        <a asp-area="evolDP" asp-controller="Expedition" asp-action="ExpRegistRange" asp-route-expcompanyJson="@JsonConvert.SerializeObject(expCompany)">
            <img style="background:none; width:50px;height:50px;" src="~/images/RegistredMail2.png" title="@localizer["ExpRegistRange"]" />
        </a>
        }
    </div>
    <table class="table table-sm table-hover table-collapse-seperate">
        <thead id="bootstrap-overrides" class="table-info sticky-header">
           <tr>
                @if(AddExpCompany)
                {
                <th></th>
                }
                <th>@localizer["ID"]</th>
                <th>@localizer["CompanyName"]</th>
                <th>@localizer["CompanyCode"]</th>
                <th>@localizer["CompanyAddress"]</th>
                <th>@localizer["CompanyPostalCode"]</th>
                <th>@localizer["CompanyPostalCodeDescription"]</th>
                <th>@localizer["CompanyCountry"]</th>
            </tr>
        </thead>
        <tbody id="bootstrap-overrides">
            <tr id="Show|ExpCompany">
                @if(AddExpCompany)
                {
                <td>
                    <img onclick="EditRow('ExpCompany')" style="background:none; width:25px;height:25px;" src="~/images/edit.png" title="@localizer["ExpCompanyChange"]" />
                </td>
                }
                <td>@expCompany.ID</td>
                <td>@expCompany.CompanyCode</td>
                <td>@expCompany.CompanyName</td>
                <td>@expCompany.CompanyAddress</td>
                <td>@expCompany.CompanyPostalCode</td>
                <td>@expCompany.CompanyPostalCodeDescription</td>
                <td>@expCompany.CompanyCountry</td>
            </tr>
            @if (AddExpCompany)
            {
                <tr id="Hide|ExpCompany" style="display: none">
                    <form id="AddFrm|ExpCompany" class="d-flex justify-content-center m-5" asp-controller="Expedition" asp-action="ChangeExpCompany" asp-route-expcompanyID="@expCompany.ID">
                    <td style="align-items:center; display:flex">
                        <img onclick="CancelRow('ExpCompany')" type="image" style="background:none; width:25px;height:25px;" src="~/images/cancel.png" title="@localizer["Cancel"]" />
                        <input onclick="return true" type="image" value="@localizer["SubmitChange"]" style="background:none; width:25px;height:25px;" name="Submit" src="~/images/Ok.png" />
                    </td>
                    <td>@expCompany.ID</td>
                    <td>@expCompany.CompanyCode</td>
                    <input style="display: none" id=ExpCompanyID name=ExpCompanyID value="@expCompany.ID" />
                    <td><input id=CompanyName name=CompanyName type="text" maxlength="256" style="width: 100%" value="@expCompany.CompanyName" /></td>
                    <td><input id=CompanyAddress name=CompanyAddress type="text" maxlength="256" style="width: 100%" value="@expCompany.CompanyAddress" /></td>
                    <td><input id=CompanyPostalCode name=CompanyPostalCode type="text" maxlength="256" style="width: 100%" value="@expCompany.CompanyPostalCode" /></td>
                    <td><input id=CompanyPostalCodeDescription name=CompanyPostalCodeDescription type="text" maxlength="256" style="width: 100%" value="@expCompany.CompanyPostalCodeDescription" /></td>
                    <td><input id=CompanyCountry name=CompanyCountry type="text" maxlength="256" style="width: 100%" value="@expCompany.CompanyCountry" /></td>
                    </form>
                </tr>
            }
        </tbody>
    </table>
    <table class="table table-sm table-hover table-collapse-seperate">
        <thead id="bootstrap-overrides" class="table-info sticky-header">
            <tr>
                @if (AddExpeditionType)
                {
                <th rowspan="2">@localizer["Action"]
                    @if (expCompanyTypesNotIn.Count() > 0 && 1==0) //TODO: Adicionar um tipo de expedição à COmpanhia obriga a configurar escalões
                    {
                    <img onclick="EditRow('Type')" style="background:none; width:35px;height:35px;" src="~/images/add.png" title="@localizer["AddExpeditionType"]" />
                    }
                </th>
                }
                <th rowspan="2" t>@localizer["ExpeditionType"]</th>
                <th rowspan="2" title="@localizer["RegistModeTip"]">@localizer["RegistMode"]</th>
                <th rowspan="2" title="@localizer["SeparationModeTip"]">@localizer["SeparationMode"]</th>
                <th rowspan="2" title="@localizer["BarcodeRegistModeTip"]">@localizer["BarcodeRegistMode"]</th>
                <th rowspan="2" title="@localizer["GenerateDetailRegistTip"]">@localizer["GenerateDetailRegist"]</th>
                <th colspan="3">@localizer["DRFlags"]</th>
            </tr>
            <tr>
                <th>@localizer["DRFlagRegistado"]</th>
                <th>@localizer["DRFlagEncomenda"]</th>
                <th>@localizer["DRFlagPessoal"]</th>
            </tr>
        </thead>
        <tbody>
            @foreach (ExpeditionTypeElement e in expCompanyTypes)
            {
                @if (AddExpeditionType && expCompanyTypesNotIn.Count() > 0)
                {
                    <tr id="Hide|Type" style="display: none">
                        <form id="AddFrm|Type" class="d-flex justify-content-center m-5" asp-area="evolDP" asp-controller="Expedition" asp-action="AddExpCompanyType"
                  asp-route-expeditiontypeJson="@JsonConvert.SerializeObject(e)" asp-route-specificExpCompany="true">
                        <td style="align-items:center; display:flex">
                            <img onclick="CancelRow('Type')" type="image" style="background:none; width:25px;height:25px;" src="~/images/cancel.png" title="@localizer["Cancel"]" />
                            <input onclick="return true" type="image" value="@localizer["SubmitChange"]" style="background:none; width:25px;height:25px;" name="Submit" src="~/images/Ok.png" />
                        </td>
                        <td>
                            <select id="ExpeditionType" name="ExpeditionType">
                                    @foreach (ExpeditionTypeElement x in expCompanyTypesNotIn)
                                    {
                                    <option value="@x.ExpeditionType">@x.Description</option>
                                    }
                            </select>
                        </td>
                        <td><input onchange="RegistModeChange()" type="checkbox" id="RegistMode" name="RegistMode" /></td>
                        <td><input type="checkbox" id="SeparationMode" name="SeparationMode"/></td>
                        <td><input type="number" min="0" max="1" id="BarcodeRegistMode" name="BarcodeRegistMode" value="0" /></td>
                        <td><input type="checkbox" id="DRFlagGenerateDetailRegist" disabled /></td>
                        <td><input type="checkbox" id="DRFlagRegistado" disabled /></td>
                        <td><input type="checkbox" id="DRFlagEncomenda" disabled /></td>
                        <td><input type="checkbox" id="DRFlagPessoal" disabled /></td>
                        </form>
                    </tr>
                }
                @foreach (ExpCompanyType c in e.ExpCompanyTypesList)
                {
                    value = e.ExpeditionType.ToString();
                    <tr id="Show|@value">
                        @if (AddExpeditionType)
                        {
                            <td>
                                <img onclick="EditRow('@value')" style="background:none; width:25px;height:25px;" src="~/images/edit.png" title="@localizer["ChangeExpCompanyType"]" />
                            </td>
                        }
                        <td>@e.Description</td>
                        @{
                            value = c.RegistMode ? "checked" : "";
                        }
                        <td><input type="checkbox" id="RegistMode" @value disabled /></td>
                        @{
                            value = c.SeparationMode ? "checked" : "";
                        }
                        <td><input type="checkbox" id="SeparationMode" @value disabled /></td>
                        @{
                            value = c.BarcodeRegistMode != null ? ((bool)c.BarcodeRegistMode ? "1" : "0") : "0";
                        }
                        <td>@value</td>
                        @{
                            value = c.GenerateDetailRegist ? "checked" : "";
                        }
                        <td><input type="checkbox" id="GenerateDetailRegist" @value disabled /></td>
                        @{
                            value = c.DRFlagRegistado ? "checked" : "";
                        }
                        <td><input type="checkbox" id="DRFlagRegistado" @value disabled /></td>
                        @{
                            value = c.DRFlagEncomenda ? "checked" : "";
                        }
                        <td><input type="checkbox" id="DRFlagEncomenda" @value disabled /></td>
                        @{
                            value = c.DRFlagPessoal ? "checked" : "";
                        }
                        <td><input type="checkbox" id="DRFlagPessoal" @value disabled /></td>
                    </tr>
                    @if (AddExpeditionType)
                    {
                        value = e.ExpeditionType.ToString();
                        <tr id="Hide|@value" style="display: none">
                            <form id="AddFrm|@value" class="d-flex justify-content-center m-5" asp-area="evolDP" asp-controller="Expedition" asp-action="ChangeExpCompanyType"
                    asp-route-expeditiontypeJson="@JsonConvert.SerializeObject(e)" asp-route-specificExpCompany="true">
                            <td style="align-items:center; display:flex">
                                <img onclick="CancelRow('@value')" type="image" style="background:none; width:25px;height:25px;" src="~/images/cancel.png" title="@localizer["Cancel"]" />
                                <input onclick="return true" type="image" value="@localizer["SubmitChange"]" style="background:none; width:25px;height:25px;" name="Submit" src="~/images/Ok.png" />
                            </td>
                                <td>@e.Description</td>
                                @{
                                    value = c.RegistMode ? "checked" : "";
                                }
                            <td><input onchange="RegistModeChange()" type="checkbox" id="RegistMode" name="RegistMode" @value /></td>
                                @{
                                    value = c.SeparationMode ? "checked" : "";
                                }
                            <td><input type="checkbox" id="SeparationMode" name="SeparationMode" @value /></td>
                                @{
                                    value = c.BarcodeRegistMode != null ? ((bool)c.BarcodeRegistMode ? "1" : "0") : "0";
                                }
                            <td><input type="number" min="0" max="1" id="BarcodeRegistMode" name="BarcodeRegistMode" value="@value" /></td>
                                @{
                                    value = c.GenerateDetailRegist ? "checked" : "";
                                    nameValue = value + "DRFlagGenerateDetailRegist";
                                }
                            <td><input type="checkbox" id="@nameValue" @value disabled /></td>
                                @{
                                    value = c.DRFlagRegistado ? "checked" : "";
                                    nameValue = value + "DRFlagRegistado";
                                }
                            <td><input type="checkbox" id="@nameValue" @value disabled /></td>
                                @{
                                    value = c.DRFlagEncomenda ? "checked" : "";
                                    nameValue = value + "DRFlagEncomenda";
                                }
                            <td><input type="checkbox" id="@nameValue" @value disabled /></td>
                                @{
                                    value = c.DRFlagPessoal ? "checked" : "";
                                    nameValue = value + "DRFlagPessoal";
                                }
                            <td><input type="checkbox" id="@nameValue" @value disabled /></td>

                            </form>
                        </tr>
                    }
                }
            }
        </tbody>
    </table>
}
@section Scripts
    {
    <script type="text/javascript">
        function RegistModeChange() {
            var checkbox = document.getElementById("RegistMode");
            chkElements = document.querySelectorAll('input[id^="checkedDRFlag"]');
            chkElements.forEach(tElement => {
                tElement.checked = checkbox.checked;
            });
        }
        function CancelRow(value) {
            eShide('Hide|' + value);
            eSshow('Show|' + value);
            var obj = document.getElementById("AddFrm|" + value);
            obj.disabled = true;
            return false;
        }
        function EditRow(value) {
            eShide('Show|' + value);
            eSshow('Hide|' + value);
            var obj = document.getElementById("AddFrm|" + value);
            obj.disabled = false;

            let str = 'Hide|' + value;
            trElements = document.querySelectorAll('tr[id^="Hide|"]');
            trElements.forEach(tElement => {
                if (tElement.id != str) {
                    let val = tElement.id.substring(5);
                    CancelRow(val);
                }
            });
        }
    </script>
}