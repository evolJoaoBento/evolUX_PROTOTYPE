@using Shared.Models.Areas.evolDP
@using Shared.ViewModels.Areas.evolDP
@using Newtonsoft.Json;
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer localizer
@inject IConfiguration configuration

@model ExpeditionTypeViewModel;
@{
    string siteURL = configuration.GetValue<string>("evolUXSiteURL");
    bool AddExpeditionType = false;
    if (Model.Permissions.Find(x => x == "AddExpeditionType") != null) { AddExpeditionType = true; }
}
@if (Model == null)
{
    <div id = "TitlePage" >
        <h1>@localizer["ExpCompanyTypes"]</h1>
    </div>
    <a class='bx bx-left-arrow grow_01' style="color:rgb(90 205 239)" asp-area="evolDP" asp-controller="Expedition" asp-action="Types">
    </a>
    @localizer["NoModelData"]
}
else
{
    ExpeditionTypeElement expeditionType = Model.Types.First();
    string source = "TypeDetail";
    string headerDesc = expeditionType.Description;
    string expCompanyName = Model.ExpCompanies.Where(x => x.ID == expeditionType.ExpCompanyTypesList.First().ExpCompanyID).First().CompanyName;
    if (expeditionType.ExpCompanyTypesList.Count() > 1)
        source = "Type";
    else
        headerDesc = expCompanyName + "[" + headerDesc + "]";

    <div id="TitlePage">
        <h1>@localizer["ExpCompanyType"]</h1>
        <h2>@headerDesc</h2>
    </div>
    <a class='bx bx-left-arrow grow_01' style="color:rgb(90 205 239)" asp-area="evolDP" asp-controller="Expedition" asp-action="Types">
    </a>
    string value = "";
    string Level0Name = "level";

    int level = 0;
    string idValue = "arrow" + level.ToString();
    string nameValue = "";

    <table class="table table-sm table-hover table-collapse-seperate">
        <thead id="bootstrap-overrides" class="table-info sticky-header">
            <tr>
                @if (AddExpeditionType)
                {
                    <th rowspan="2" class="evol-fitcontent-column"></th>
                }
                @if (expeditionType.ExpCompanyTypesList.Count() > 1)
                {
                    <th rowspan="2" title="@localizer["ExpCompany"]">@localizer["ExpCompany"]</th>
                }
                <th rowspan="2" title="@localizer["RegistModeTip"]">@localizer["RegistMode"]</th>
                <th rowspan="2" title="@localizer["SeparationModeTip"]">@localizer["SeparationMode"]</th>
                <th rowspan="2" title="@localizer["BarcodeRegistModeTip"]">@localizer["BarcodeRegistMode"]</th>
                <th rowspan="2" title="@localizer["GenerateDetailRegistTip"]">@localizer["GenerateDetailRegist"]</th>
                <th colspan="3">@localizer["DRFlags"]</th>
            </tr>
            <tr>
                <th>@localizer["DRFlagRegistado"]</th>
                <th>@localizer["DRFlagEncomenda"]</th>
                <th>@localizer["DRFlagPessoal"]</th>
            </tr>
        </thead>
        <tbody id="bootstrap-overrides">
            @foreach(ExpCompanyType c in expeditionType.ExpCompanyTypesList)
            {
                value = expeditionType.ExpeditionType.ToString();
                <tr id="Show|@value" ondblclick="openPopupEdit('@value')">
                    @if (AddExpeditionType)
                    {
                        <td style="text-align: center" class="borders">
                            <img onclick="openPopupEdit('@value')" class="evol-image wobble" src="~/images/edit.png" title="@localizer["ChangeExpCompanyType"]" />
                        </td>
                    }
                    @if (expeditionType.ExpCompanyTypesList.Count() > 1)
                    {
                        <td>@Model.ExpCompanies.Where(x => x.ID == c.ExpCompanyID).First().CompanyName</td>
                    }
                    @{
                        value = c.RegistMode ? "checked" : "";
                    }
                    <td><input type="checkbox" id="RegistMode" @value disabled /></td>
                    @{value = c.SeparationMode ? "checked": "";}
                    <td><input type="checkbox" id="SeparationMode" @value disabled /></td>
                    @{value = c.BarcodeRegistMode != null ? ((bool)c.BarcodeRegistMode ? "1" : "0") : "0";}
                    <td>@value</td>
                    @{value = c.GenerateDetailRegist ? "checked": "";}
                    <td><input type="checkbox" id="GenerateDetailRegist" @value disabled /></td>
                    @{value = c.DRFlagRegistado ? "checked": "";}
                    <td><input type="checkbox" id="DRFlagRegistado" @value disabled /></td>
                    @{value = c.DRFlagEncomenda ? "checked": "";}
                    <td><input type="checkbox" id="DRFlagEncomenda" @value disabled /></td>
                    @{value = c.DRFlagPessoal ? "checked": "";}
                    <td><input type="checkbox" id="DRFlagPessoal" @value disabled /></td>
                </tr>   
                @if (AddExpeditionType)
                {
                    value = expeditionType.ExpeditionType.ToString();
                    <div class="popup-container confirmPopupEdit FormEdit" id="Edit|@value" style="display: none;">
                        <div class="bgGradient">
                            <div class="popup">
                                <form class="justify-content-center FormEdit" asp-area="evolDP" asp-controller="Expedition" asp-action="ChangeExpCompanyType"
                                   asp-route-expeditiontypeJson="@JsonConvert.SerializeObject(expeditionType)" asp-route-source="@source">
                                    <h1>@localizer["PopupMessageEdit"]</h1>
                                    <div class="form-inputs">
                                        @if (expeditionType.ExpCompanyTypesList.Count() > 1)
                                        {
                                            <h6>@localizer["ExpCompany"]</h6>
                                            <input type="text" id="Company" name="Company" value="@Model.ExpCompanies.Where(x => x.ID == c.ExpCompanyID).First().CompanyName" readonly/>
                                        }
                                        @{
                                            value = c.RegistMode ? "checked" : "";
                                        }
                                        <h6>@localizer["RegistMode"]</h6>
                                        <input style="margin-bottom: 10px; width: 20px" onchange="RegistModeChange()" type="checkbox" id="RegistMode" name="RegistMode" @value />
                                        @{
                                            value = c.SeparationMode ? "checked" : "";
                                        }
                                        <h6>@localizer["SeparationMode"]</h6>
                                        <input style="margin-bottom: 10px; width: 20px" type="checkbox" id="SeparationMode" name="SeparationMode" @value />
                                        @{
                                            value = c.BarcodeRegistMode != null ? ((bool)c.BarcodeRegistMode ? "1" : "0") : "0";
                                        }
                                        <h6>@localizer["BarcodeRegistMode"]</h6>
                                        <input type="number" min="0" max="1" id="BarcodeRegistMode" name="BarcodeRegistMode" value="@value" />
                                        @{
                                            value = c.GenerateDetailRegist ? "checked" : "";
                                            nameValue = value + "DRFlagGenerateDetailRegist";
                                        }
                                        <h6>@localizer["GenerateDetailRegist"]</h6>
                                        <input style="margin-bottom: 10px; width: 20px" type="checkbox" id="@nameValue" @value disabled />
                                        @{
                                            value = c.DRFlagRegistado ? "checked" : "";
                                            nameValue = value + "DRFlagRegistado";
                                        }
                                        <h6>@localizer["DRFlagRegistado"]</h6>
                                        <input style="margin-bottom: 10px; width: 20px" type="checkbox" id="@nameValue" @value disabled />
                                        @{
                                            value = c.DRFlagEncomenda ? "checked" : "";
                                            nameValue = value + "DRFlagEncomenda";
                                        }
                                        <h6>@localizer["DRFlagEncomenda"]</h6>
                                        <input style="margin-bottom: 10px; width: 20px" type="checkbox" id="@nameValue" @value disabled />
                                        @{
                                            value = c.DRFlagPessoal ? "checked" : "";
                                            nameValue = value + "DRFlagPessoal";
                                        }
                                        <h6>@localizer["DRFlagPessoal"]</h6>
                                        <input style="width: 20px" type="checkbox" id="@nameValue" @value disabled />
                                    </div>
                                    <div class="popup-buttons">
                                        <button class="popup-button" id="confirmEdit" name="Submit" onclick="return confirmBtn()" value="@localizer["SubmitChange"]">Confirmar</button>
                                        <button class="popup-button" onclick="return closePopup()">Cancelar</button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                }
            }
        </tbody>
    </table>
}
@section Scripts
    {
    <script type="text/javascript">
        function RegistModeChange()
        {
            var checkbox = document.getElementById("RegistMode");
            chkElements = document.querySelectorAll('input[id^="checkedDRFlag"]');
            chkElements.forEach(tElement => {
                tElement.checked = checkbox.checked;
            });
        }
        function openPopupEdit(value) {
            document.getElementById("Edit|" + value).style.display = "flex";
        }
        function confirmBtn() {
            return true;
        }
        function closePopup() {
            var elements = document.querySelectorAll(".confirmPopupEdit");
            for (var i = 0; i < elements.length; i++) {
                elements[i].style.display = "none";
            }
            return false;
        }
    </script>
}