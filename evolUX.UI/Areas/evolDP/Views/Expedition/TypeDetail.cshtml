@using Shared.Models.Areas.evolDP
@using Shared.ViewModels.Areas.evolDP
@using Newtonsoft.Json;
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer localizer
@inject IConfiguration configuration

@model ExpeditionTypeViewModel;
@{
    string siteURL = configuration.GetValue<string>("evolUXSiteURL");
    bool AddExpeditionType = false;
    if (Model.Permissions.Find(x => x == "AddExpeditionType") != null) { AddExpeditionType = true; }
}
@if (Model == null)
{
    <div id = "TitlePage" >
        <h1>@localizer["ExpCompanyTypes"]</h1>
    </div>
    <a class='bx bx-left-arrow' style="color:rgb(90 205 239)" asp-area="evolDP" asp-controller="Expedition" asp-action="Types">
    </a>
    @localizer["NoModelData"]
}
else
{
    ExpeditionTypeElement expeditionType = Model.Types.First();
    string source = "TypeDetail";
    string headerDesc = expeditionType.Description;
    string expCompanyName = Model.ExpCompanies.Where(x => x.ID == expeditionType.ExpCompanyTypesList.First().ExpCompanyID).First().CompanyName;
    if (expeditionType.ExpCompanyTypesList.Count() > 1)
        source = "Type";
    else
        headerDesc = expCompanyName + "[" + headerDesc + "]";

    <div id="TitlePage">
        <h1>@localizer["ExpCompanyType"]</h1>
        <h2>@headerDesc</h2>
    </div>
    <a class='bx bx-left-arrow' style="color:rgb(90 205 239)" asp-area="evolDP" asp-controller="Expedition" asp-action="Types">
    </a>
    string value = "";
    string Level0Name = "level";

    int level = 0;
    string idValue = "arrow" + level.ToString();
    string nameValue = "";

    <table class="table table-sm table-hover table-collapse-seperate">
        <thead id="bootstrap-overrides" class="table-info sticky-header">
            <tr>
                @if (AddExpeditionType)
                {
                <th rowspan="2"></th>
                }
                @if (expeditionType.ExpCompanyTypesList.Count() > 1)
                {
                    <th rowspan="2" title="@localizer["ExpCompany"]">@localizer["ExpCompany"]</th>
                }
                <th rowspan="2" title="@localizer["RegistModeTip"]">@localizer["RegistMode"]</th>
                <th rowspan="2" title="@localizer["SeparationModeTip"]">@localizer["SeparationMode"]</th>
                <th rowspan="2" title="@localizer["BarcodeRegistModeTip"]">@localizer["BarcodeRegistMode"]</th>
                <th rowspan="2" title="@localizer["GenerateDetailRegistTip"]">@localizer["GenerateDetailRegist"]</th>
                <th colspan="3">@localizer["DRFlags"]</th>
            </tr>
            <tr>
                <th>@localizer["DRFlagRegistado"]</th>
                <th>@localizer["DRFlagEncomenda"]</th>
                <th>@localizer["DRFlagPessoal"]</th>
            </tr>
        </thead>
        <tbody>
            @foreach(ExpCompanyType c in expeditionType.ExpCompanyTypesList)
            {
                value = expeditionType.ExpeditionType.ToString();
                <tr id="Show|@value">
                    @if (AddExpeditionType)
                    {
                        <td>
                            <img onclick="EditRow('@value')" class="evol-image" src="~/images/edit.png" title="@localizer["ChangeExpCompanyType"]" />
                        </td>
                    }
                    @if (expeditionType.ExpCompanyTypesList.Count() > 1)
                    {
                        <td>@Model.ExpCompanies.Where(x => x.ID == c.ExpCompanyID).First().CompanyName</td>
                    }
                    @{
                        value = c.RegistMode ? "checked" : "";
                    }
                    <td><input type="checkbox" id="RegistMode" @value disabled /></td>
                    @{value = c.SeparationMode ? "checked": "";}
                    <td><input type="checkbox" id="SeparationMode" @value disabled /></td>
                    @{value = c.BarcodeRegistMode != null ? ((bool)c.BarcodeRegistMode ? "1" : "0") : "0";}
                    <td>@value</td>
                    @{value = c.GenerateDetailRegist ? "checked": "";}
                    <td><input type="checkbox" id="GenerateDetailRegist" @value disabled /></td>
                    @{value = c.DRFlagRegistado ? "checked": "";}
                    <td><input type="checkbox" id="DRFlagRegistado" @value disabled /></td>
                    @{value = c.DRFlagEncomenda ? "checked": "";}
                    <td><input type="checkbox" id="DRFlagEncomenda" @value disabled /></td>
                    @{value = c.DRFlagPessoal ? "checked": "";}
                    <td><input type="checkbox" id="DRFlagPessoal" @value disabled /></td>
                </tr>   
                @if (AddExpeditionType)
                {
                    value = expeditionType.ExpeditionType.ToString();
                    <tr id="Hide|@value" style="display: none">
                        <form id="AddFrm|@value" class="d-flex justify-content-center m-5" asp-area="evolDP" asp-controller="Expedition" asp-action="ChangeExpCompanyType"
                             asp-route-expeditiontypeJson="@JsonConvert.SerializeObject(expeditionType)" asp-route-source="@source">
                        <td style ="align-items:center; display:flex">
                            <img onclick="CancelRow('@value')" type="image" class="evol-image" src="~/images/cancel.png" title="@localizer["Cancel"]" />
                            <input onclick="return true" type="image" value="@localizer["SubmitChange"]" class="evol-image" name="Submit" src="~/images/Ok.png" />
                        </td>
                        @if (expeditionType.ExpCompanyTypesList.Count() > 1)
                        {
                        <td>@Model.ExpCompanies.Where(x => x.ID == c.ExpCompanyID).First().CompanyName</td>
                        }
                        @{
                            value = c.RegistMode ? "checked" : "";
                        }
                        <td><input onchange="RegistModeChange()" type="checkbox" id="RegistMode" name="RegistMode" @value/></td>
                        @{value = c.SeparationMode ? "checked": "";}
                        <td><input type="checkbox" id="SeparationMode" name="SeparationMode" @value/></td>
                        @{value = c.BarcodeRegistMode != null ? ((bool)c.BarcodeRegistMode ? "1" : "0") : "0";}
                        <td><input type="number" min="0" max="1" id="BarcodeRegistMode" name="BarcodeRegistMode" value="@value" /></td>
                        @{
                            value = c.GenerateDetailRegist ? "checked": "";
                            nameValue = value + "DRFlagGenerateDetailRegist";
                        }
                        <td><input type="checkbox" id="@nameValue" @value disabled /></td>
                        @{
                            value = c.DRFlagRegistado ? "checked": "";
                            nameValue = value + "DRFlagRegistado";
                        }
                        <td><input type="checkbox" id="@nameValue" @value disabled /></td>
                        @{
                            value = c.DRFlagEncomenda ? "checked": "";
                            nameValue = value + "DRFlagEncomenda";
                        }
                        <td><input type="checkbox" id="@nameValue" @value disabled /></td>
                        @{
                            value = c.DRFlagPessoal ? "checked": "";
                            nameValue = value + "DRFlagPessoal";
                        }
                        <td><input type="checkbox" id="@nameValue" @value disabled /></td>

                        </form>
                    </tr>
                }
            }
        </tbody>
    </table>
}
@section Scripts
    {
    <script type="text/javascript">
        function RegistModeChange()
        {
            var checkbox = document.getElementById("RegistMode");
            chkElements = document.querySelectorAll('input[id^="checkedDRFlag"]');
            chkElements.forEach(tElement => {
                tElement.checked = checkbox.checked;
            });
        }
        function CancelRow(value) {
            eShide('Hide|' + value);
            eSshow('Show|' + value);
            var obj = document.getElementById("AddFrm|" + value);
            obj.disabled = true;
            return false;
        }
        function EditRow(value) {
            eShide('Show|' + value);
            eSshow('Hide|' + value);
            var obj = document.getElementById("AddFrm|" + value);
            obj.disabled = false;

            let str = 'Hide|' + value;
            trElements = document.querySelectorAll('tr[id^="Hide|"]');
            trElements.forEach(tElement => {
                if (tElement.id != str) {
                    let val = tElement.id.substring(5);
                    CancelRow(val);
                }
            });
        }
    </script>
}