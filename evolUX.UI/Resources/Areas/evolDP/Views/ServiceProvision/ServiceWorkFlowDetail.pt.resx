<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddExpCode" xml:space="preserve">
    <value>Adicionar Companhia de Expedição</value>
  </data>
  <data name="AddServiceType" xml:space="preserve">
    <value>Adicionar Tipo de Serviço</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="ChangeServiceTask" xml:space="preserve">
    <value>Alterar Tipo de Tratamento</value>
  </data>
  <data name="CheckExpCompanySepCodes" xml:space="preserve">
    <value>Validação integral de código postal</value>
  </data>
  <data name="CheckExpCompanySepCodesTip" xml:space="preserve">
    <value>Indica se o código postal deve ser validado contra a lista detalhada de códigos postais válidos da Companhia de Expedição</value>
  </data>
  <data name="ComplementServiceTask" xml:space="preserve">
    <value>Tipo Complementar</value>
  </data>
  <data name="ComplementServiceTaskTip" xml:space="preserve">
    <value>Tipo de Tratamento a escolher se a Cor da Impressão mudar. Preto/Branco para Cores ou vice-versa</value>
  </data>
  <data name="DefaultExpCenterCode" xml:space="preserve">
    <value>Centro de Expedição (Default)</value>
  </data>
  <data name="DefaultExpCenterCodeTip" xml:space="preserve">
    <value>Centro de Expedição de Default (caso não exista redirecionamento de Companhia de Expedição)</value>
  </data>
  <data name="DefaultExpCompanyZone" xml:space="preserve">
    <value>Zona de Expedição (Default)</value>
  </data>
  <data name="DefaultExpCompanyZoneTip" xml:space="preserve">
    <value>Zona de Expedição de Default (caso não exista redirecionamento de Companhia de Expedição)</value>
  </data>
  <data name="deleteMsgServiceType" xml:space="preserve">
    <value>Tem a certeza que quer remover o tipo de serviço @#ServiceTypeCode#@ para o tipo de tratamento</value>
  </data>
  <data name="DeleteServiceType" xml:space="preserve">
    <value>Remover Tipo de Serviço</value>
  </data>
  <data name="EmptyField" xml:space="preserve">
    <value>&lt;vazio&gt;</value>
  </data>
  <data name="ExpCode" xml:space="preserve">
    <value>Código Tratamento/Expedição</value>
  </data>
  <data name="ExpCodeConfig" xml:space="preserve">
    <value>Configurações de Código Tratamento/Expedição</value>
  </data>
  <data name="ExpCodeDesc" xml:space="preserve">
    <value>Descrição</value>
  </data>
  <data name="ExpCompany" xml:space="preserve">
    <value>Companhia de Expedição</value>
  </data>
  <data name="ExternalExpeditionMode" xml:space="preserve">
    <value>Modo de alteração de Companhia de Expedição</value>
  </data>
  <data name="ExternalExpeditionMode-1" xml:space="preserve">
    <value>Respeitar configuração ao nível da Área de Negócio</value>
  </data>
  <data name="ExternalExpeditionMode0" xml:space="preserve">
    <value>Não mudar de Companhia</value>
  </data>
  <data name="ExternalExpeditionMode1" xml:space="preserve">
    <value>Muda de Companhia por Código Postal</value>
  </data>
  <data name="ExternalExpeditionMode2" xml:space="preserve">
    <value>Muda de Companhia por intervalos de Códigos Postais</value>
  </data>
  <data name="ExternalExpeditionModeTip" xml:space="preserve">
    <value>Se o documento não tiver especificado o Modo de alteração de Companhia de Expedição, prevalece o modo associado ao Tipo de Tratamento</value>
  </data>
  <data name="List" xml:space="preserve">
    <value>Ver configurações do Tipo de Tratamento</value>
  </data>
  <data name="NoModelData" xml:space="preserve">
    <value>Sem Dados</value>
  </data>
  <data name="PopupMessageAdd" xml:space="preserve">
    <value>Adicionar Tipo de Serviço</value>
  </data>
  <data name="PopupMessageEdit" xml:space="preserve">
    <value>Modo Edição</value>
  </data>
  <data name="PostalCodeStart" xml:space="preserve">
    <value>Início do código postal no código de separação de expedição</value>
  </data>
  <data name="PostalCodeStartTip" xml:space="preserve">
    <value>Valor da posição, dentro do código de separação de expedição, onde o código postal se inicia, esta posição é contabilizada do dígito (-) significativo para o (+) significativo</value>
  </data>
  <data name="Priority" xml:space="preserve">
    <value>Prioridade</value>
  </data>
  <data name="SelectExpCompanyRef" xml:space="preserve">
    <value>Selecionar Companhia de Expedição de referência</value>
  </data>
  <data name="SelectServiceTask" xml:space="preserve">
    <value>Selecionar novo Tipo de Serviço</value>
  </data>
  <data name="ServiceTask" xml:space="preserve">
    <value>Tipo de Tratamento</value>
  </data>
  <data name="ServiceTaskCode" xml:space="preserve">
    <value>Código</value>
  </data>
  <data name="ServiceTaskConfigs" xml:space="preserve">
    <value>Configurações</value>
  </data>
  <data name="ServiceTaskDesc" xml:space="preserve">
    <value>Descrição</value>
  </data>
  <data name="ServiceTaskRef" xml:space="preserve">
    <value>Tipo de tratamento de referência para cópia</value>
  </data>
  <data name="ServiceType" xml:space="preserve">
    <value>Tipos de Serviços</value>
  </data>
  <data name="ServiceTypeCode" xml:space="preserve">
    <value>Código do Tipo Serviço</value>
  </data>
  <data name="ServiceTypeDesc" xml:space="preserve">
    <value>Tipo de Serviço</value>
  </data>
  <data name="StationExceededDesc" xml:space="preserve">
    <value>Descrição para Excesso de Adicionais</value>
  </data>
  <data name="StationExceededDescTip" xml:space="preserve">
    <value>Descrição a colocar nas Banners dos ficheiros de produção em caso de ser excedido o n.º de Adicionais de Envelopagem</value>
  </data>
  <data name="SubmitAdd" xml:space="preserve">
    <value>Adicionar</value>
  </data>
  <data name="SubmitChange" xml:space="preserve">
    <value>Alterar</value>
  </data>
</root>